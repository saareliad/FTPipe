graph(%self.1 : __torch__.torch.nn.modules.module.___torch_mangle_12.Module,
      %input.1 : Float(100, 100)):
  %85 : __torch__.torch.nn.modules.module.___torch_mangle_11.Module = prim::GetAttr[name="b2"](%self.1)
  %75 : __torch__.torch.nn.modules.module.___torch_mangle_3.Module = prim::GetAttr[name="b1"](%self.1)
  %116 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%75, %input.1)
  %105 : Tensor, %106 : Tensor = prim::TupleUnpack(%116)
  %117 : (Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%85, %105, %106)
  %113 : Tensor, %114 : Tensor, %115 : Tensor = prim::TupleUnpack(%117)
  %54 : (Float(100, 100), Float(100, 100)) = prim::TupleConstruct(%113, %114)
  %55 : ((Float(100, 100), Float(100, 100)), Float(100, 100)) = prim::TupleConstruct(%54, %115)
  return (%55)
