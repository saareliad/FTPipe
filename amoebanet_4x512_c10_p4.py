import torch
from torch import Tensor
import torch.nn as nn
import torch.nn.functional as F
from itertools import chain
import operator
from typing import Optional, Tuple, Iterator, Iterable
from torch.nn.modules.batchnorm import BatchNorm2d
from torch.nn.modules.pooling import AvgPool2d
from torch.nn.modules.linear import Linear
from sample_models.amoebaNet import MergeTwo
from torch.nn.modules.activation import ReLU
from torch.nn.modules.linear import Identity
from torch.nn.modules.pooling import MaxPool2d
from torch.nn.modules.conv import Conv2d
# this is an auto generated file do not edit unless you know what you are doing


# partition adjacency
# model inputs {0}
# partition 0 {'inputs': {'input0'}, 'outputs': {1}}
# partition 1 {'inputs': {0}, 'outputs': {2}}
# partition 2 {'inputs': {1}, 'outputs': {3}}
# partition 3 {'inputs': {2}, 'outputs': {'output0'}}
# model outputs {3}

def createConfig(model,DEBUG=False,partitions_only=False):
    layer_dict = layerDict(model)
    tensor_dict = tensorDict(model)
    
    # now constructing the partitions in order
    layer_scopes = ['AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu]',
        'AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]']
    buffer_scopes = []
    parameter_scopes = []
    layers = {l: layer_dict[l] for l in layer_scopes}
    buffers = {b: tensor_dict[b] for b in buffer_scopes}
    parameters = {p: tensor_dict[p] for p in parameter_scopes}
    partition0 = AmoebaNet_DPartition0(layers,buffers,parameters)

    layer_scopes = ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]']
    buffer_scopes = []
    parameter_scopes = []
    layers = {l: layer_dict[l] for l in layer_scopes}
    buffers = {b: tensor_dict[b] for b in buffer_scopes}
    parameters = {p: tensor_dict[p] for p in parameter_scopes}
    partition1 = AmoebaNet_DPartition1(layers,buffers,parameters)

    layer_scopes = ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]']
    buffer_scopes = []
    parameter_scopes = []
    layers = {l: layer_dict[l] for l in layer_scopes}
    buffers = {b: tensor_dict[b] for b in buffer_scopes}
    parameters = {p: tensor_dict[p] for p in parameter_scopes}
    partition2 = AmoebaNet_DPartition2(layers,buffers,parameters)

    layer_scopes = ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]',
        'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14]',
        'AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling]',
        'AmoebaNet_D/Classifier[classifier]/Linear[classifier]']
    buffer_scopes = []
    parameter_scopes = []
    layers = {l: layer_dict[l] for l in layer_scopes}
    buffers = {b: tensor_dict[b] for b in buffer_scopes}
    parameters = {p: tensor_dict[p] for p in parameter_scopes}
    partition3 = AmoebaNet_DPartition3(layers,buffers,parameters)

    # creating configuration
    config = {0: {'inputs': ['input0'], 'outputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/aten::cat4628', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]']},
            1: {'inputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/aten::cat4628', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]'], 'outputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/aten::cat7664', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]']},
            2: {'inputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/aten::cat7664', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]'], 'outputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]']},
            3: {'inputs': ['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]', 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]'], 'outputs': ['AmoebaNet_D/Classifier[classifier]/Linear[classifier]']}
            }
    device = 'cpu' if DEBUG else torch.device('cuda:0')
    partition0.device=device
    config[0]['model'] = partition0.to(device)
    device = 'cpu' if DEBUG else torch.device('cuda:1')
    partition1.device=device
    config[1]['model'] = partition1.to(device)
    device = 'cpu' if DEBUG else torch.device('cuda:2')
    partition2.device=device
    config[2]['model'] = partition2.to(device)
    device = 'cpu' if DEBUG else torch.device('cuda:3')
    partition3.device=device
    config[3]['model'] = partition3.to(device)
    config['model inputs'] = ['input0']
    config['model outputs'] = ['AmoebaNet_D/Classifier[classifier]/Linear[classifier]']
    
    return [config[i]['model'] for i in range(4)] if partitions_only else config

class AmoebaNet_DPartition0(nn.Module):
    def __init__(self, layers, buffers, parameters):
        super(AmoebaNet_DPartition0, self).__init__()
        # initializing partition layers
        assert isinstance(layers,dict), f'expected layers to be of type dict but got type{type(layers)}'
        assert(len(layers) == 215)
        assert(all(isinstance(k, str) for k in layers.keys())), 'string keys are expected'
        assert(all(isinstance(v, nn.Module) for v in layers.values())), 'Module values are expected'
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu]
        assert 'AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu] was expected but not given'
        self.l_0 = layers['AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu]']
        assert isinstance(self.l_0,ReLU) ,f'layers[AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_0)}'
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_1 = layers['AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_1,Conv2d) ,f'layers[AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_1)}'
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_2 = layers['AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_2,BatchNorm2d) ,f'layers[AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_2)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_3 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_3,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_3)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_4 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_4,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_4)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_5 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_5,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_5)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_6 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_6,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_6)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_7 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_7,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_7)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_8 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_8,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_8)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_9 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_9,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_9)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_10 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_10,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_10)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_11 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_11,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_11)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_12 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_12,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_12)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_13 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_13,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_13)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_14 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_14,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_14)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_15 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_15,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_15)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_16 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_16,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_16)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_17 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_17,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_17)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_18 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_18,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_18)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] was expected but not given'
        self.l_19 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]']
        assert isinstance(self.l_19,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_19)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] was expected but not given'
        self.l_20 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]']
        assert isinstance(self.l_20,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_20)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] was expected but not given'
        self.l_21 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]']
        assert isinstance(self.l_21,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_21)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] was expected but not given'
        self.l_22 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]']
        assert isinstance(self.l_22,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_22)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] was expected but not given'
        self.l_23 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]']
        assert isinstance(self.l_23,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_23)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_24 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_24,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_24)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_25 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_25,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_25)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_26 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_26,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_26)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_27 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_27,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_27)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_28 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_28,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_28)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_29 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_29,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_29)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_30 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_30,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_30)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_31 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_31,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_31)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_32 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_32,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_32)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_33 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_33,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_33)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_34 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_34,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_34)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_35 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_35,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_35)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_36 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_36,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_36)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_37 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_37,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_37)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_38 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_38,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_38)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_39 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_39,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_39)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_40 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_40,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_40)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_41 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_41,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_41)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_42 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_42,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_42)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_43 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_43,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_43)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_44 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_44,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_44)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_45 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_45,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_45)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_46 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_46,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_46)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_47 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_47,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_47)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_48 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_48,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_48)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_49 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_49,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_49)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_50 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_50,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_50)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_51 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_51,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_51)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_52 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_52,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_52)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu] was expected but not given'
        self.l_53 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_53,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_53)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1] was expected but not given'
        self.l_54 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1]']
        assert isinstance(self.l_54,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1]] is expected to be of type Conv2d but was of type {type(self.l_54)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2] was expected but not given'
        self.l_55 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2]']
        assert isinstance(self.l_55,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2]] is expected to be of type Conv2d but was of type {type(self.l_55)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] was expected but not given'
        self.l_56 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]']
        assert isinstance(self.l_56,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]] is expected to be of type BatchNorm2d but was of type {type(self.l_56)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_57 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_57,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_57)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_58 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_58,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_58)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_59 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_59,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_59)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_60 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_60,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_60)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_61 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_61,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_61)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_62 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_62,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_62)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_63 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_63,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_63)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_64 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_64,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_64)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_65 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_65,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_65)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_66 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_66,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_66)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_67 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_67,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_67)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_68 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_68,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_68)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_69 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_69,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_69)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] was expected but not given'
        self.l_70 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]']
        assert isinstance(self.l_70,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_70)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] was expected but not given'
        self.l_71 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]']
        assert isinstance(self.l_71,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_71)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] was expected but not given'
        self.l_72 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]']
        assert isinstance(self.l_72,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_72)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] was expected but not given'
        self.l_73 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]']
        assert isinstance(self.l_73,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_73)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] was expected but not given'
        self.l_74 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]']
        assert isinstance(self.l_74,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_74)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_75 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_75,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_75)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_76 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_76,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_76)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_77 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_77,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_77)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_78 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_78,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_78)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_79 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_79,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_79)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_80 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_80,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_80)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_81 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_81,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_81)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_82 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_82,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_82)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_83 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_83,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_83)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_84 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_84,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_84)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_85 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_85,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_85)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_86 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_86,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_86)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_87 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_87,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_87)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_88 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_88,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_88)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_89 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_89,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_89)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_90 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_90,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_90)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_91 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_91,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_91)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_92 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_92,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_92)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_93 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_93,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_93)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_94 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_94,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_94)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_95 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_95,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_95)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_96 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_96,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_96)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_97 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_97,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_97)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_98 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_98,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_98)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_99 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_99,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_99)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_100 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_100,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_100)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_101 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_101,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_101)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_102 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_102,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_102)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_103 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_103,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_103)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu] was expected but not given'
        self.l_104 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_104,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_104)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1] was expected but not given'
        self.l_105 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1]']
        assert isinstance(self.l_105,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1]] is expected to be of type Conv2d but was of type {type(self.l_105)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2] was expected but not given'
        self.l_106 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2]']
        assert isinstance(self.l_106,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2]] is expected to be of type Conv2d but was of type {type(self.l_106)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] was expected but not given'
        self.l_107 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]']
        assert isinstance(self.l_107,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]] is expected to be of type BatchNorm2d but was of type {type(self.l_107)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_108 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_108,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_108)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_109 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_109,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_109)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_110 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_110,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_110)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_111 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_111,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_111)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_112 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_112,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_112)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_113 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_113,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_113)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_114 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_114,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_114)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_115 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_115,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_115)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_116 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_116,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_116)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_117 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_117,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_117)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_118 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_118,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_118)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_119 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_119,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_119)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_120 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_120,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_120)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_121 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_121,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_121)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_122 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_122,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_122)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_123 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_123,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_123)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_124 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_124,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_124)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_125 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_125,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_125)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_126 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_126,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_126)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_127 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_127,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_127)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_128 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_128,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_128)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_129 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_129,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_129)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_130 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_130,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_130)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_131 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_131,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_131)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_132 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_132,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_132)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_133 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_133,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_133)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_134 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_134,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_134)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_135 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_135,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_135)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_136 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_136,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_136)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_137 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_137,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_137)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_138 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_138,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_138)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_139 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_139,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_139)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_140 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_140,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_140)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_141 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_141,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_141)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_142 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_142,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_142)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_143 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_143,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_143)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_144 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_144,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_144)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_145 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_145,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_145)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_146 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_146,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_146)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_147 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_147,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_147)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_148 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_148,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_148)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_149 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_149,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_149)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_150 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_150,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_150)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_151 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_151,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_151)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_152 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_152,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_152)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_153 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_153,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_153)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_154 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_154,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_154)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_155 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_155,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_155)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_156 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_156,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_156)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_157 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_157,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_157)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_158 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_158,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_158)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_159 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_159,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_159)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_160 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_160,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_160)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_161 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_161,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_161)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_162 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_162,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_162)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_163 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_163,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_163)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_164 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_164,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_164)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_165 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_165,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_165)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_166 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_166,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_166)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_167 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_167,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_167)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_168 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_168,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_168)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_169 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_169,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_169)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_170 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_170,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_170)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_171 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_171,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_171)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_172 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_172,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_172)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_173 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_173,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_173)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_174 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_174,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_174)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_175 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_175,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_175)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_176 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_176,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_176)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_177 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_177,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_177)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_178 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_178,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_178)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_179 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_179,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_179)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_180 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_180,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_180)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_181 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_181,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_181)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_182 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_182,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_182)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_183 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_183,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_183)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_184 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_184,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_184)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_185 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_185,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_185)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_186 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_186,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_186)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_187 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_187,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_187)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_188 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_188,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_188)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_189 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_189,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_189)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_190 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_190,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_190)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_191 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_191,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_191)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_192 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_192,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_192)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_193 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_193,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_193)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_194 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_194,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_194)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_195 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_195,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_195)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_196 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_196,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_196)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_197 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_197,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_197)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_198 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_198,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_198)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_199 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_199,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_199)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_200 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_200,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_200)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_201 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_201,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_201)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_202 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_202,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_202)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_203 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_203,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_203)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_204 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_204,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_204)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_205 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_205,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_205)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_206 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_206,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_206)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_207 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_207,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_207)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_208 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_208,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_208)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_209 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_209,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_209)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_210 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_210,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_210)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_211 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_211,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_211)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_212 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_212,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_212)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_213 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_213,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_213)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_214 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_214,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_214)}'

        # initializing partition buffers
        assert isinstance(buffers,dict), f'expected buffers to be of type dict got {type(buffers)}'
        assert len(buffers) == 0, f'expected buffers to have 0 elements but has {len(buffers)} elements'
        assert all(isinstance(k,str) for k in buffers.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in buffers.values()), 'Tensor values are expected'
        
        # initializing partition parameters
        assert isinstance(parameters,dict), f'expected parameters to be of type dict got {type(parameters)}'
        assert len(parameters) == 0, f'expected parameters to have 0 elements but has {len(parameters)} elements'
        assert all(isinstance(k,str) for k in parameters.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in parameters.values()), 'Tensor values are expected'
        self.device = torch.device('cuda:0')
        self.lookup = { 'l_0': 'stem.conv_cell.relu',
                        'l_1': 'stem.conv_cell.conv',
                        'l_2': 'stem.conv_cell.norm',
                        'l_3': 'cells.0.preprocess0.relu',
                        'l_4': 'cells.0.preprocess0.conv',
                        'l_5': 'cells.0.preprocess0.norm',
                        'l_6': 'cells.0.preprocess1.relu',
                        'l_7': 'cells.0.preprocess1.conv',
                        'l_8': 'cells.0.preprocess1.norm',
                        'l_9': 'cells.0.layers.0.module.pool',
                        'l_10': 'cells.0.layers.0.module.conv_cell.conv',
                        'l_11': 'cells.0.layers.0.module.conv_cell.norm',
                        'l_12': 'cells.0.layers.1.module.pool',
                        'l_13': 'cells.0.layers.1.module.conv_cell.conv',
                        'l_14': 'cells.0.layers.1.module.conv_cell.norm',
                        'l_15': 'cells.0.layers.2',
                        'l_16': 'cells.0.layers.3.module.conv1_1x1.relu',
                        'l_17': 'cells.0.layers.3.module.conv1_1x1.conv',
                        'l_18': 'cells.0.layers.3.module.conv1_1x1.norm',
                        'l_19': 'cells.0.layers.3.module.conv2_3x3.relu',
                        'l_20': 'cells.0.layers.3.module.conv2_3x3.conv',
                        'l_21': 'cells.0.layers.3.module.conv2_3x3.norm',
                        'l_22': 'cells.0.layers.3.module.conv3_1x1.relu',
                        'l_23': 'cells.0.layers.3.module.conv3_1x1.conv',
                        'l_24': 'cells.0.layers.3.module.conv3_1x1.norm',
                        'l_25': 'cells.0.layers.5',
                        'l_26': 'cells.0.layers.6.module.conv1_1x1.relu',
                        'l_27': 'cells.0.layers.6.module.conv1_1x1.conv',
                        'l_28': 'cells.0.layers.6.module.conv1_1x1.norm',
                        'l_29': 'cells.0.layers.6.module.conv2_1x7.relu',
                        'l_30': 'cells.0.layers.6.module.conv2_1x7.conv',
                        'l_31': 'cells.0.layers.6.module.conv2_1x7.norm',
                        'l_32': 'cells.0.layers.6.module.conv3_7x1.relu',
                        'l_33': 'cells.0.layers.6.module.conv3_7x1.conv',
                        'l_34': 'cells.0.layers.6.module.conv3_7x1.norm',
                        'l_35': 'cells.0.layers.6.module.conv4_1x1.relu',
                        'l_36': 'cells.0.layers.6.module.conv4_1x1.conv',
                        'l_37': 'cells.0.layers.6.module.conv4_1x1.norm',
                        'l_38': 'cells.0.layers.7.module.pool',
                        'l_39': 'cells.0.layers.7.module.conv_cell.conv',
                        'l_40': 'cells.0.layers.7.module.conv_cell.norm',
                        'l_41': 'cells.0.layers.8',
                        'l_42': 'cells.0.layers.9.module.pool',
                        'l_43': 'cells.0.layers.9.module.conv_cell.conv',
                        'l_44': 'cells.0.layers.9.module.conv_cell.norm',
                        'l_45': 'cells.0.layers.10.module.relu',
                        'l_46': 'cells.0.layers.10.module.conv',
                        'l_47': 'cells.0.layers.10.module.norm',
                        'l_48': 'cells.0.layers.11',
                        'l_49': 'cells.0.layers.13.module.pool',
                        'l_50': 'cells.0.layers.13.module.conv_cell.conv',
                        'l_51': 'cells.0.layers.13.module.conv_cell.norm',
                        'l_52': 'cells.0.layers.14',
                        'l_53': 'cells.1.preprocess0.relu',
                        'l_54': 'cells.1.preprocess0.conv_1',
                        'l_55': 'cells.1.preprocess0.conv_2',
                        'l_56': 'cells.1.preprocess0.bn',
                        'l_57': 'cells.1.preprocess1.relu',
                        'l_58': 'cells.1.preprocess1.conv',
                        'l_59': 'cells.1.preprocess1.norm',
                        'l_60': 'cells.1.layers.0.module.pool',
                        'l_61': 'cells.1.layers.0.module.conv_cell.conv',
                        'l_62': 'cells.1.layers.0.module.conv_cell.norm',
                        'l_63': 'cells.1.layers.1.module.pool',
                        'l_64': 'cells.1.layers.1.module.conv_cell.conv',
                        'l_65': 'cells.1.layers.1.module.conv_cell.norm',
                        'l_66': 'cells.1.layers.2',
                        'l_67': 'cells.1.layers.3.module.conv1_1x1.relu',
                        'l_68': 'cells.1.layers.3.module.conv1_1x1.conv',
                        'l_69': 'cells.1.layers.3.module.conv1_1x1.norm',
                        'l_70': 'cells.1.layers.3.module.conv2_3x3.relu',
                        'l_71': 'cells.1.layers.3.module.conv2_3x3.conv',
                        'l_72': 'cells.1.layers.3.module.conv2_3x3.norm',
                        'l_73': 'cells.1.layers.3.module.conv3_1x1.relu',
                        'l_74': 'cells.1.layers.3.module.conv3_1x1.conv',
                        'l_75': 'cells.1.layers.3.module.conv3_1x1.norm',
                        'l_76': 'cells.1.layers.5',
                        'l_77': 'cells.1.layers.6.module.conv1_1x1.relu',
                        'l_78': 'cells.1.layers.6.module.conv1_1x1.conv',
                        'l_79': 'cells.1.layers.6.module.conv1_1x1.norm',
                        'l_80': 'cells.1.layers.6.module.conv2_1x7.relu',
                        'l_81': 'cells.1.layers.6.module.conv2_1x7.conv',
                        'l_82': 'cells.1.layers.6.module.conv2_1x7.norm',
                        'l_83': 'cells.1.layers.6.module.conv3_7x1.relu',
                        'l_84': 'cells.1.layers.6.module.conv3_7x1.conv',
                        'l_85': 'cells.1.layers.6.module.conv3_7x1.norm',
                        'l_86': 'cells.1.layers.6.module.conv4_1x1.relu',
                        'l_87': 'cells.1.layers.6.module.conv4_1x1.conv',
                        'l_88': 'cells.1.layers.6.module.conv4_1x1.norm',
                        'l_89': 'cells.1.layers.7.module.pool',
                        'l_90': 'cells.1.layers.7.module.conv_cell.conv',
                        'l_91': 'cells.1.layers.7.module.conv_cell.norm',
                        'l_92': 'cells.1.layers.8',
                        'l_93': 'cells.1.layers.9.module.pool',
                        'l_94': 'cells.1.layers.9.module.conv_cell.conv',
                        'l_95': 'cells.1.layers.9.module.conv_cell.norm',
                        'l_96': 'cells.1.layers.10.module.relu',
                        'l_97': 'cells.1.layers.10.module.conv',
                        'l_98': 'cells.1.layers.10.module.norm',
                        'l_99': 'cells.1.layers.11',
                        'l_100': 'cells.1.layers.13.module.pool',
                        'l_101': 'cells.1.layers.13.module.conv_cell.conv',
                        'l_102': 'cells.1.layers.13.module.conv_cell.norm',
                        'l_103': 'cells.1.layers.14',
                        'l_104': 'cells.2.preprocess0.relu',
                        'l_105': 'cells.2.preprocess0.conv_1',
                        'l_106': 'cells.2.preprocess0.conv_2',
                        'l_107': 'cells.2.preprocess0.bn',
                        'l_108': 'cells.2.preprocess1.relu',
                        'l_109': 'cells.2.preprocess1.conv',
                        'l_110': 'cells.2.preprocess1.norm',
                        'l_111': 'cells.2.layers.0.module.pool',
                        'l_112': 'cells.2.layers.0.module.conv_cell.conv',
                        'l_113': 'cells.2.layers.0.module.conv_cell.norm',
                        'l_114': 'cells.2.layers.1.module.relu',
                        'l_115': 'cells.2.layers.1.module.conv',
                        'l_116': 'cells.2.layers.1.module.norm',
                        'l_117': 'cells.2.layers.2',
                        'l_118': 'cells.2.layers.4.module.pool',
                        'l_119': 'cells.2.layers.4.module.conv_cell.conv',
                        'l_120': 'cells.2.layers.4.module.conv_cell.norm',
                        'l_121': 'cells.2.layers.5',
                        'l_122': 'cells.2.layers.7.module.conv1_1x1.relu',
                        'l_123': 'cells.2.layers.7.module.conv1_1x1.conv',
                        'l_124': 'cells.2.layers.7.module.conv1_1x1.norm',
                        'l_125': 'cells.2.layers.7.module.conv2_1x7.relu',
                        'l_126': 'cells.2.layers.7.module.conv2_1x7.conv',
                        'l_127': 'cells.2.layers.7.module.conv2_1x7.norm',
                        'l_128': 'cells.2.layers.7.module.conv3_7x1.relu',
                        'l_129': 'cells.2.layers.7.module.conv3_7x1.conv',
                        'l_130': 'cells.2.layers.7.module.conv3_7x1.norm',
                        'l_131': 'cells.2.layers.7.module.conv4_1x1.relu',
                        'l_132': 'cells.2.layers.7.module.conv4_1x1.conv',
                        'l_133': 'cells.2.layers.7.module.conv4_1x1.norm',
                        'l_134': 'cells.2.layers.8',
                        'l_135': 'cells.2.layers.9.module.relu',
                        'l_136': 'cells.2.layers.9.module.conv',
                        'l_137': 'cells.2.layers.9.module.norm',
                        'l_138': 'cells.2.layers.10.module.conv1_1x1.relu',
                        'l_139': 'cells.2.layers.10.module.conv1_1x1.conv',
                        'l_140': 'cells.2.layers.10.module.conv1_1x1.norm',
                        'l_141': 'cells.2.layers.10.module.conv2_1x7.relu',
                        'l_142': 'cells.2.layers.10.module.conv2_1x7.conv',
                        'l_143': 'cells.2.layers.10.module.conv2_1x7.norm',
                        'l_144': 'cells.2.layers.10.module.conv3_7x1.relu',
                        'l_145': 'cells.2.layers.10.module.conv3_7x1.conv',
                        'l_146': 'cells.2.layers.10.module.conv3_7x1.norm',
                        'l_147': 'cells.2.layers.10.module.conv4_1x1.relu',
                        'l_148': 'cells.2.layers.10.module.conv4_1x1.conv',
                        'l_149': 'cells.2.layers.10.module.conv4_1x1.norm',
                        'l_150': 'cells.2.layers.11',
                        'l_151': 'cells.2.layers.12.module.pool',
                        'l_152': 'cells.2.layers.12.module.conv_cell.conv',
                        'l_153': 'cells.2.layers.12.module.conv_cell.norm',
                        'l_154': 'cells.2.layers.13.module.relu',
                        'l_155': 'cells.2.layers.13.module.conv',
                        'l_156': 'cells.2.layers.13.module.norm',
                        'l_157': 'cells.2.layers.14',
                        'l_158': 'cells.3.preprocess0.relu',
                        'l_159': 'cells.3.preprocess0.conv',
                        'l_160': 'cells.3.preprocess0.norm',
                        'l_161': 'cells.3.preprocess1.relu',
                        'l_162': 'cells.3.preprocess1.conv',
                        'l_163': 'cells.3.preprocess1.norm',
                        'l_164': 'cells.3.layers.0.module.pool',
                        'l_165': 'cells.3.layers.0.module.conv_cell.conv',
                        'l_166': 'cells.3.layers.0.module.conv_cell.norm',
                        'l_167': 'cells.3.layers.1.module.relu',
                        'l_168': 'cells.3.layers.1.module.conv',
                        'l_169': 'cells.3.layers.1.module.norm',
                        'l_170': 'cells.3.layers.2',
                        'l_171': 'cells.3.layers.4.module.pool',
                        'l_172': 'cells.3.layers.4.module.conv_cell.conv',
                        'l_173': 'cells.3.layers.4.module.conv_cell.norm',
                        'l_174': 'cells.3.layers.5',
                        'l_175': 'cells.3.layers.7.module.conv1_1x1.relu',
                        'l_176': 'cells.3.layers.7.module.conv1_1x1.conv',
                        'l_177': 'cells.3.layers.7.module.conv1_1x1.norm',
                        'l_178': 'cells.3.layers.7.module.conv2_1x7.relu',
                        'l_179': 'cells.3.layers.7.module.conv2_1x7.conv',
                        'l_180': 'cells.3.layers.7.module.conv2_1x7.norm',
                        'l_181': 'cells.3.layers.7.module.conv3_7x1.relu',
                        'l_182': 'cells.3.layers.7.module.conv3_7x1.conv',
                        'l_183': 'cells.3.layers.7.module.conv3_7x1.norm',
                        'l_184': 'cells.3.layers.7.module.conv4_1x1.relu',
                        'l_185': 'cells.3.layers.7.module.conv4_1x1.conv',
                        'l_186': 'cells.3.layers.7.module.conv4_1x1.norm',
                        'l_187': 'cells.3.layers.8',
                        'l_188': 'cells.3.layers.9.module.relu',
                        'l_189': 'cells.3.layers.9.module.conv',
                        'l_190': 'cells.3.layers.9.module.norm',
                        'l_191': 'cells.3.layers.10.module.conv1_1x1.relu',
                        'l_192': 'cells.3.layers.10.module.conv1_1x1.conv',
                        'l_193': 'cells.3.layers.10.module.conv1_1x1.norm',
                        'l_194': 'cells.3.layers.10.module.conv2_1x7.relu',
                        'l_195': 'cells.3.layers.10.module.conv2_1x7.conv',
                        'l_196': 'cells.3.layers.10.module.conv2_1x7.norm',
                        'l_197': 'cells.3.layers.10.module.conv3_7x1.relu',
                        'l_198': 'cells.3.layers.10.module.conv3_7x1.conv',
                        'l_199': 'cells.3.layers.10.module.conv3_7x1.norm',
                        'l_200': 'cells.3.layers.10.module.conv4_1x1.relu',
                        'l_201': 'cells.3.layers.10.module.conv4_1x1.conv',
                        'l_202': 'cells.3.layers.10.module.conv4_1x1.norm',
                        'l_203': 'cells.3.layers.11',
                        'l_204': 'cells.3.layers.12.module.pool',
                        'l_205': 'cells.3.layers.12.module.conv_cell.conv',
                        'l_206': 'cells.3.layers.12.module.conv_cell.norm',
                        'l_207': 'cells.3.layers.13.module.relu',
                        'l_208': 'cells.3.layers.13.module.conv',
                        'l_209': 'cells.3.layers.13.module.norm',
                        'l_210': 'cells.3.layers.14',
                        'l_211': 'cells.4.preprocess0.relu',
                        'l_212': 'cells.4.preprocess0.conv',
                        'l_213': 'cells.5.preprocess0.relu',
                        'l_214': 'cells.5.preprocess0.conv'}

    def forward(self, x0):
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/ReLU[relu] <=> self.l_0
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_1
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_2
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_3
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_4
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_5
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_6
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_7
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_8
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_9
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_10
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_11
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_12
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_13
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_14
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2] <=> self.l_15
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_16
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_17
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_18
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] <=> self.l_19
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] <=> self.l_20
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] <=> self.l_21
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] <=> self.l_22
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] <=> self.l_23
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] <=> self.l_24
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5] <=> self.l_25
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_26
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_27
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_28
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_29
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_30
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_31
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_32
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_33
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_34
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_35
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_36
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_37
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_38
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_39
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_40
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[8] <=> self.l_41
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_42
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_43
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_44
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] <=> self.l_45
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] <=> self.l_46
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_47
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[11] <=> self.l_48
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_49
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_50
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_51
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[14] <=> self.l_52
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu] <=> self.l_53
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_1] <=> self.l_54
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/Conv2d[conv_2] <=> self.l_55
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] <=> self.l_56
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_57
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_58
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_59
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_60
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_61
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_62
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_63
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_64
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_65
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2] <=> self.l_66
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_67
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_68
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_69
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] <=> self.l_70
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] <=> self.l_71
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] <=> self.l_72
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] <=> self.l_73
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] <=> self.l_74
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] <=> self.l_75
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5] <=> self.l_76
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_77
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_78
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_79
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_80
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_81
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_82
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_83
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_84
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_85
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_86
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_87
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_88
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_89
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_90
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_91
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[8] <=> self.l_92
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_93
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_94
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_95
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] <=> self.l_96
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] <=> self.l_97
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_98
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[11] <=> self.l_99
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_100
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_101
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_102
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[14] <=> self.l_103
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu] <=> self.l_104
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_1] <=> self.l_105
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/Conv2d[conv_2] <=> self.l_106
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] <=> self.l_107
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_108
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_109
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_110
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_111
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_112
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_113
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_114
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_115
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_116
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2] <=> self.l_117
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_118
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_119
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_120
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[5] <=> self.l_121
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_122
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_123
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_124
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_125
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_126
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_127
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_128
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_129
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_130
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_131
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_132
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_133
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[8] <=> self.l_134
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_135
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_136
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_137
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_138
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_139
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_140
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_141
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_142
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_143
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_144
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_145
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_146
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_147
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_148
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_149
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[11] <=> self.l_150
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_151
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_152
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_153
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_154
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_155
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_156
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[14] <=> self.l_157
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_158
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_159
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_160
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_161
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_162
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_163
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_164
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_165
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_166
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_167
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_168
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_169
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2] <=> self.l_170
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_171
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_172
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_173
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[5] <=> self.l_174
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_175
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_176
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_177
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_178
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_179
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_180
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_181
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_182
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_183
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_184
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_185
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_186
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[8] <=> self.l_187
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_188
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_189
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_190
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_191
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_192
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_193
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_194
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_195
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_196
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_197
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_198
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_199
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_200
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_201
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_202
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[11] <=> self.l_203
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_204
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_205
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_206
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_207
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_208
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_209
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[14] <=> self.l_210
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_211
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_212
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_213
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_214
        # input0 <=> x0

        # calling AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/Conv2d[conv]
        t_0 = self.l_2(self.l_1(self.l_0(x0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_1 = self.l_5(self.l_4(self.l_3(t_0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_2 = self.l_8(self.l_7(self.l_6(t_0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        t_3 = self.l_15(self.l_11(self.l_10(self.l_9(t_2))), self.l_14(self.l_13(self.l_12(t_2))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[5] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/MergeTwo[2]
        t_4 = self.l_25(self.l_24(self.l_23(self.l_22(self.l_21(self.l_20(self.l_19(self.l_18(self.l_17(self.l_16(t_1))))))))), t_3)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_5 = self.l_35(self.l_34(self.l_33(self.l_32(self.l_31(self.l_30(self.l_29(self.l_28(self.l_27(self.l_26(t_3))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/prim::ListConstruct2301
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/prim::Constant2302
        t_6 = torch.cat(tensors=[self.l_41(self.l_37(self.l_36(t_5)), self.l_40(self.l_39(self.l_38(t_3)))), self.l_48(self.l_44(self.l_43(self.l_42(t_3))), self.l_47(self.l_46(self.l_45(t_4)))), self.l_52(t_4, self.l_51(self.l_50(self.l_49(t_1))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/ReLU[relu] with arguments:
        # AmoebaNet_D/Stem[stem]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        t_7 = self.l_53(t_0)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/FactorizedReduce[preprocess0]/aten::cat2365
        t_8 = self.l_56(torch.cat(tensors=[self.l_54(t_7), self.l_55(t_7[0:9223372036854775807:1][:, 0:9223372036854775807:1][:, :, 1:9223372036854775807:1][:, :, :, 1:9223372036854775807:1])], dim=1))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_9 = self.l_59(self.l_58(self.l_57(t_6)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        t_10 = self.l_66(self.l_62(self.l_61(self.l_60(t_9))), self.l_65(self.l_64(self.l_63(t_9))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[5] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/MergeTwo[2]
        t_11 = self.l_76(self.l_75(self.l_74(self.l_73(self.l_72(self.l_71(self.l_70(self.l_69(self.l_68(self.l_67(t_8))))))))), t_10)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_12 = self.l_86(self.l_85(self.l_84(self.l_83(self.l_82(self.l_81(self.l_80(self.l_79(self.l_78(self.l_77(t_10))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/prim::ListConstruct3078
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[1]/prim::Constant3079
        t_13 = torch.cat(tensors=[self.l_92(self.l_88(self.l_87(t_12)), self.l_91(self.l_90(self.l_89(t_10)))), self.l_99(self.l_95(self.l_94(self.l_93(t_10))), self.l_98(self.l_97(self.l_96(t_11)))), self.l_103(t_11, self.l_102(self.l_101(self.l_100(t_8))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[0]/aten::cat2303
        t_14 = self.l_104(t_6)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/FactorizedReduce[preprocess0]/aten::cat3142
        t_15 = self.l_107(torch.cat(tensors=[self.l_105(t_14), self.l_106(t_14[0:9223372036854775807:1][:, 0:9223372036854775807:1][:, :, 1:9223372036854775807:1][:, :, :, 1:9223372036854775807:1])], dim=1))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_16 = self.l_110(self.l_109(self.l_108(t_13)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_17 = self.l_117(self.l_113(self.l_112(self.l_111(t_15))), self.l_116(self.l_115(self.l_114(t_15))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_18 = self.l_131(self.l_130(self.l_129(self.l_128(self.l_127(self.l_126(self.l_125(self.l_124(self.l_123(self.l_122(t_16))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_19 = self.l_147(self.l_146(self.l_145(self.l_144(self.l_143(self.l_142(self.l_141(self.l_140(self.l_139(self.l_138(t_16))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/prim::ListConstruct3873
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[2]/prim::Constant3874
        t_20 = torch.cat(tensors=[self.l_134(t_15, self.l_133(self.l_132(t_18))), self.l_150(self.l_137(self.l_136(self.l_135(t_16))), self.l_149(self.l_148(t_19))), self.l_157(self.l_153(self.l_152(self.l_151(t_15))), self.l_156(self.l_155(self.l_154(self.l_121(t_17, self.l_120(self.l_119(self.l_118(t_17))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_21 = self.l_160(self.l_159(self.l_158(t_13)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_22 = self.l_163(self.l_162(self.l_161(t_20)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_23 = self.l_170(self.l_166(self.l_165(self.l_164(t_21))), self.l_169(self.l_168(self.l_167(t_21))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_24 = self.l_184(self.l_183(self.l_182(self.l_181(self.l_180(self.l_179(self.l_178(self.l_177(self.l_176(self.l_175(t_22))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_25 = self.l_200(self.l_199(self.l_198(self.l_197(self.l_196(self.l_195(self.l_194(self.l_193(self.l_192(self.l_191(t_22))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/prim::ListConstruct4626
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/prim::Constant4627
        t_26 = torch.cat(tensors=[self.l_187(t_21, self.l_186(self.l_185(t_24))), self.l_203(self.l_190(self.l_189(self.l_188(t_22))), self.l_202(self.l_201(t_25))), self.l_210(self.l_206(self.l_205(self.l_204(t_21))), self.l_209(self.l_208(self.l_207(self.l_174(t_23, self.l_173(self.l_172(self.l_171(t_23))))))))], dim=1)
        # returing:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/aten::cat4628
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]
        return (t_26, self.l_212(self.l_211(t_20)), self.l_214(self.l_213(t_26)))

    def state_dict(self,device):
        # we return the state dict of this part as it should be in the original model
        state = super().state_dict()
        lookup = self.lookup
        result = dict()
        for k, v in state.items():
            if k in lookup:
                result[lookup[k]] = v if device is None else v.to(device)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                result[new_k] = v if device is None else v.to(device)
        return result

    def load_state_dict(self, state):
        reverse_lookup = {v: k for k, v in self.lookup.items()}
        ts = chain(self.named_parameters(), self.named_buffers())
        device = list(ts)[0][1].device
        keys = list(self.state_dict(None).keys())
        new_state = dict()
        for k in keys:
            if k in reverse_lookup:
                new_state[reverse_lookup[k]] = state[k].to(device)
                continue
            idx = k.rfind(".")
            to_replace = k[:idx]
            if to_replace in reverse_lookup:
                key = reverse_lookup[to_replace] + k[idx:]
                new_state[key] = state[k].to(device)
        super().load_state_dict(new_state, strict=True)

    def named_parameters(self,recurse=True):
        # we return the named parameters of this part as it should be in the original model
        params = super().named_parameters(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)

    def named_buffers(self,recurse=True):
        # we return the named buffers of this part as it should be in the original model
        params = super().named_buffers(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)


class AmoebaNet_DPartition1(nn.Module):
    def __init__(self, layers, buffers, parameters):
        super(AmoebaNet_DPartition1, self).__init__()
        # initializing partition layers
        assert isinstance(layers,dict), f'expected layers to be of type dict but got type{type(layers)}'
        assert(len(layers) == 208)
        assert(all(isinstance(k, str) for k in layers.keys())), 'string keys are expected'
        assert(all(isinstance(v, nn.Module) for v in layers.values())), 'Module values are expected'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_0 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_0,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_0)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_1 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_1,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_1)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_2 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_2,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_2)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_3 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_3,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_3)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_4 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_4,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_4)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_5 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_5,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_5)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_6 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_6,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_6)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_7 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_7,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_7)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_8 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_8,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_8)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_9 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_9,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_9)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_10 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_10,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_10)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_11 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_11,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_11)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_12 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_12,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_12)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_13 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_13,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_13)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_14 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_14,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_14)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_15 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_15,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_15)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_16 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_16,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_16)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_17 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_17,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_17)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_18 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_18,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_18)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_19 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_19,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_19)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_20 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_20,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_20)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_21 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_21,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_21)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_22 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_22,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_22)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_23 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_23,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_23)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_24 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_24,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_24)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_25 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_25,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_25)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_26 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_26,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_26)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_27 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_27,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_27)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_28 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_28,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_28)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_29 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_29,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_29)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_30 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_30,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_30)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_31 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_31,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_31)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_32 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_32,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_32)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_33 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_33,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_33)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_34 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_34,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_34)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_35 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_35,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_35)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_36 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_36,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_36)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_37 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_37,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_37)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_38 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_38,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_38)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_39 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_39,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_39)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_40 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_40,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_40)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_41 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_41,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_41)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_42 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_42,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_42)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_43 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_43,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_43)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_44 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_44,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_44)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_45 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_45,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_45)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_46 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_46,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_46)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_47 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_47,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_47)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_48 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_48,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_48)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_49 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_49,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_49)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_50 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_50,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_50)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_51 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_51,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_51)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_52 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_52,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_52)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_53 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_53,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_53)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_54 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_54,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_54)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_55 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_55,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_55)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_56 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_56,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_56)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_57 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_57,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_57)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_58 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_58,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_58)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_59 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_59,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_59)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_60 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_60,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_60)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_61 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_61,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_61)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_62 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_62,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_62)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_63 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_63,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_63)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_64 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_64,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_64)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_65 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_65,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_65)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_66 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_66,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_66)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_67 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_67,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_67)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_68 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_68,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_68)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_69 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_69,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_69)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_70 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_70,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_70)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_71 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_71,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_71)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_72 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_72,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_72)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_73 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_73,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_73)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_74 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_74,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_74)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_75 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_75,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_75)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_76 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_76,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_76)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_77 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_77,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_77)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_78 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_78,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_78)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_79 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_79,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_79)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_80 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_80,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_80)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_81 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_81,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_81)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_82 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_82,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_82)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_83 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_83,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_83)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_84 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_84,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_84)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_85 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_85,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_85)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_86 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_86,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_86)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_87 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_87,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_87)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_88 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_88,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_88)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_89 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_89,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_89)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_90 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_90,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_90)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_91 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_91,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_91)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_92 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_92,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_92)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_93 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_93,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_93)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_94 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_94,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_94)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_95 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_95,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_95)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_96 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_96,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_96)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_97 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_97,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_97)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_98 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_98,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_98)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_99 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_99,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_99)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_100 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_100,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_100)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_101 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_101,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_101)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_102 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_102,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_102)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_103 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_103,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_103)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_104 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_104,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_104)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_105 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_105,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_105)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_106 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_106,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_106)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_107 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_107,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_107)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_108 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_108,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_108)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_109 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_109,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_109)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_110 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_110,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_110)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_111 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_111,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_111)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_112 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_112,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_112)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_113 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_113,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_113)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_114 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_114,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_114)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_115 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_115,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_115)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_116 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_116,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_116)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_117 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_117,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_117)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] was expected but not given'
        self.l_118 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]']
        assert isinstance(self.l_118,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_118)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] was expected but not given'
        self.l_119 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]']
        assert isinstance(self.l_119,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_119)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] was expected but not given'
        self.l_120 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]']
        assert isinstance(self.l_120,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_120)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] was expected but not given'
        self.l_121 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]']
        assert isinstance(self.l_121,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_121)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] was expected but not given'
        self.l_122 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]']
        assert isinstance(self.l_122,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_122)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_123 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_123,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_123)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_124 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_124,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_124)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_125 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_125,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_125)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_126 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_126,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_126)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_127 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_127,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_127)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_128 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_128,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_128)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_129 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_129,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_129)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_130 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_130,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_130)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_131 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_131,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_131)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_132 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_132,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_132)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_133 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_133,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_133)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_134 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_134,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_134)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_135 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_135,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_135)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_136 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_136,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_136)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_137 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_137,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_137)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_138 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_138,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_138)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_139 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_139,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_139)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_140 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_140,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_140)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_141 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_141,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_141)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_142 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_142,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_142)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_143 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_143,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_143)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_144 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_144,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_144)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_145 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_145,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_145)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_146 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_146,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_146)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_147 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_147,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_147)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_148 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_148,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_148)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_149 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_149,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_149)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_150 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_150,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_150)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_151 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_151,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_151)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu] was expected but not given'
        self.l_152 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_152,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_152)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1] was expected but not given'
        self.l_153 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1]']
        assert isinstance(self.l_153,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1]] is expected to be of type Conv2d but was of type {type(self.l_153)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2] was expected but not given'
        self.l_154 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2]']
        assert isinstance(self.l_154,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2]] is expected to be of type Conv2d but was of type {type(self.l_154)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] was expected but not given'
        self.l_155 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]']
        assert isinstance(self.l_155,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]] is expected to be of type BatchNorm2d but was of type {type(self.l_155)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_156 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_156,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_156)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_157 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_157,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_157)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_158 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_158,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_158)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_159 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_159,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_159)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_160 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_160,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_160)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_161 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_161,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_161)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_162 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_162,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_162)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_163 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_163,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_163)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_164 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_164,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_164)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_165 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_165,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_165)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_166 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_166,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_166)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_167 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_167,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_167)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_168 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_168,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_168)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_169 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_169,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_169)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_170 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_170,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_170)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_171 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_171,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_171)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_172 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_172,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_172)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_173 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_173,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_173)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_174 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_174,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_174)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_175 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_175,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_175)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_176 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_176,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_176)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_177 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_177,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_177)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_178 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_178,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_178)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_179 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_179,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_179)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_180 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_180,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_180)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_181 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_181,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_181)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_182 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_182,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_182)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_183 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_183,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_183)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_184 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_184,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_184)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_185 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_185,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_185)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_186 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_186,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_186)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_187 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_187,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_187)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_188 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_188,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_188)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_189 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_189,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_189)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_190 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_190,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_190)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_191 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_191,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_191)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_192 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_192,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_192)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_193 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_193,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_193)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_194 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_194,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_194)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_195 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_195,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_195)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_196 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_196,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_196)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_197 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_197,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_197)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_198 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_198,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_198)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_199 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_199,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_199)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_200 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_200,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_200)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_201 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_201,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_201)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_202 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_202,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_202)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_203 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_203,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_203)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_204 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_204,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_204)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_205 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_205,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_205)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_206 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_206,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_206)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_207 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_207,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_207)}'

        # initializing partition buffers
        assert isinstance(buffers,dict), f'expected buffers to be of type dict got {type(buffers)}'
        assert len(buffers) == 0, f'expected buffers to have 0 elements but has {len(buffers)} elements'
        assert all(isinstance(k,str) for k in buffers.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in buffers.values()), 'Tensor values are expected'
        
        # initializing partition parameters
        assert isinstance(parameters,dict), f'expected parameters to be of type dict got {type(parameters)}'
        assert len(parameters) == 0, f'expected parameters to have 0 elements but has {len(parameters)} elements'
        assert all(isinstance(k,str) for k in parameters.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in parameters.values()), 'Tensor values are expected'
        self.device = torch.device('cuda:1')
        self.lookup = { 'l_0': 'cells.4.preprocess0.norm',
                        'l_1': 'cells.4.preprocess1.relu',
                        'l_2': 'cells.4.preprocess1.conv',
                        'l_3': 'cells.4.preprocess1.norm',
                        'l_4': 'cells.4.layers.0.module.pool',
                        'l_5': 'cells.4.layers.0.module.conv_cell.conv',
                        'l_6': 'cells.4.layers.0.module.conv_cell.norm',
                        'l_7': 'cells.4.layers.1.module.relu',
                        'l_8': 'cells.4.layers.1.module.conv',
                        'l_9': 'cells.4.layers.1.module.norm',
                        'l_10': 'cells.4.layers.2',
                        'l_11': 'cells.4.layers.4.module.pool',
                        'l_12': 'cells.4.layers.4.module.conv_cell.conv',
                        'l_13': 'cells.4.layers.4.module.conv_cell.norm',
                        'l_14': 'cells.4.layers.5',
                        'l_15': 'cells.4.layers.7.module.conv1_1x1.relu',
                        'l_16': 'cells.4.layers.7.module.conv1_1x1.conv',
                        'l_17': 'cells.4.layers.7.module.conv1_1x1.norm',
                        'l_18': 'cells.4.layers.7.module.conv2_1x7.relu',
                        'l_19': 'cells.4.layers.7.module.conv2_1x7.conv',
                        'l_20': 'cells.4.layers.7.module.conv2_1x7.norm',
                        'l_21': 'cells.4.layers.7.module.conv3_7x1.relu',
                        'l_22': 'cells.4.layers.7.module.conv3_7x1.conv',
                        'l_23': 'cells.4.layers.7.module.conv3_7x1.norm',
                        'l_24': 'cells.4.layers.7.module.conv4_1x1.relu',
                        'l_25': 'cells.4.layers.7.module.conv4_1x1.conv',
                        'l_26': 'cells.4.layers.7.module.conv4_1x1.norm',
                        'l_27': 'cells.4.layers.8',
                        'l_28': 'cells.4.layers.9.module.relu',
                        'l_29': 'cells.4.layers.9.module.conv',
                        'l_30': 'cells.4.layers.9.module.norm',
                        'l_31': 'cells.4.layers.10.module.conv1_1x1.relu',
                        'l_32': 'cells.4.layers.10.module.conv1_1x1.conv',
                        'l_33': 'cells.4.layers.10.module.conv1_1x1.norm',
                        'l_34': 'cells.4.layers.10.module.conv2_1x7.relu',
                        'l_35': 'cells.4.layers.10.module.conv2_1x7.conv',
                        'l_36': 'cells.4.layers.10.module.conv2_1x7.norm',
                        'l_37': 'cells.4.layers.10.module.conv3_7x1.relu',
                        'l_38': 'cells.4.layers.10.module.conv3_7x1.conv',
                        'l_39': 'cells.4.layers.10.module.conv3_7x1.norm',
                        'l_40': 'cells.4.layers.10.module.conv4_1x1.relu',
                        'l_41': 'cells.4.layers.10.module.conv4_1x1.conv',
                        'l_42': 'cells.4.layers.10.module.conv4_1x1.norm',
                        'l_43': 'cells.4.layers.11',
                        'l_44': 'cells.4.layers.12.module.pool',
                        'l_45': 'cells.4.layers.12.module.conv_cell.conv',
                        'l_46': 'cells.4.layers.12.module.conv_cell.norm',
                        'l_47': 'cells.4.layers.13.module.relu',
                        'l_48': 'cells.4.layers.13.module.conv',
                        'l_49': 'cells.4.layers.13.module.norm',
                        'l_50': 'cells.4.layers.14',
                        'l_51': 'cells.5.preprocess0.norm',
                        'l_52': 'cells.5.preprocess1.relu',
                        'l_53': 'cells.5.preprocess1.conv',
                        'l_54': 'cells.5.preprocess1.norm',
                        'l_55': 'cells.5.layers.0.module.pool',
                        'l_56': 'cells.5.layers.0.module.conv_cell.conv',
                        'l_57': 'cells.5.layers.0.module.conv_cell.norm',
                        'l_58': 'cells.5.layers.1.module.relu',
                        'l_59': 'cells.5.layers.1.module.conv',
                        'l_60': 'cells.5.layers.1.module.norm',
                        'l_61': 'cells.5.layers.2',
                        'l_62': 'cells.5.layers.4.module.pool',
                        'l_63': 'cells.5.layers.4.module.conv_cell.conv',
                        'l_64': 'cells.5.layers.4.module.conv_cell.norm',
                        'l_65': 'cells.5.layers.5',
                        'l_66': 'cells.5.layers.7.module.conv1_1x1.relu',
                        'l_67': 'cells.5.layers.7.module.conv1_1x1.conv',
                        'l_68': 'cells.5.layers.7.module.conv1_1x1.norm',
                        'l_69': 'cells.5.layers.7.module.conv2_1x7.relu',
                        'l_70': 'cells.5.layers.7.module.conv2_1x7.conv',
                        'l_71': 'cells.5.layers.7.module.conv2_1x7.norm',
                        'l_72': 'cells.5.layers.7.module.conv3_7x1.relu',
                        'l_73': 'cells.5.layers.7.module.conv3_7x1.conv',
                        'l_74': 'cells.5.layers.7.module.conv3_7x1.norm',
                        'l_75': 'cells.5.layers.7.module.conv4_1x1.relu',
                        'l_76': 'cells.5.layers.7.module.conv4_1x1.conv',
                        'l_77': 'cells.5.layers.7.module.conv4_1x1.norm',
                        'l_78': 'cells.5.layers.8',
                        'l_79': 'cells.5.layers.9.module.relu',
                        'l_80': 'cells.5.layers.9.module.conv',
                        'l_81': 'cells.5.layers.9.module.norm',
                        'l_82': 'cells.5.layers.10.module.conv1_1x1.relu',
                        'l_83': 'cells.5.layers.10.module.conv1_1x1.conv',
                        'l_84': 'cells.5.layers.10.module.conv1_1x1.norm',
                        'l_85': 'cells.5.layers.10.module.conv2_1x7.relu',
                        'l_86': 'cells.5.layers.10.module.conv2_1x7.conv',
                        'l_87': 'cells.5.layers.10.module.conv2_1x7.norm',
                        'l_88': 'cells.5.layers.10.module.conv3_7x1.relu',
                        'l_89': 'cells.5.layers.10.module.conv3_7x1.conv',
                        'l_90': 'cells.5.layers.10.module.conv3_7x1.norm',
                        'l_91': 'cells.5.layers.10.module.conv4_1x1.relu',
                        'l_92': 'cells.5.layers.10.module.conv4_1x1.conv',
                        'l_93': 'cells.5.layers.10.module.conv4_1x1.norm',
                        'l_94': 'cells.5.layers.11',
                        'l_95': 'cells.5.layers.12.module.pool',
                        'l_96': 'cells.5.layers.12.module.conv_cell.conv',
                        'l_97': 'cells.5.layers.12.module.conv_cell.norm',
                        'l_98': 'cells.5.layers.13.module.relu',
                        'l_99': 'cells.5.layers.13.module.conv',
                        'l_100': 'cells.5.layers.13.module.norm',
                        'l_101': 'cells.5.layers.14',
                        'l_102': 'cells.6.preprocess0.relu',
                        'l_103': 'cells.6.preprocess0.conv',
                        'l_104': 'cells.6.preprocess0.norm',
                        'l_105': 'cells.6.preprocess1.relu',
                        'l_106': 'cells.6.preprocess1.conv',
                        'l_107': 'cells.6.preprocess1.norm',
                        'l_108': 'cells.6.layers.0.module.pool',
                        'l_109': 'cells.6.layers.0.module.conv_cell.conv',
                        'l_110': 'cells.6.layers.0.module.conv_cell.norm',
                        'l_111': 'cells.6.layers.1.module.pool',
                        'l_112': 'cells.6.layers.1.module.conv_cell.conv',
                        'l_113': 'cells.6.layers.1.module.conv_cell.norm',
                        'l_114': 'cells.6.layers.2',
                        'l_115': 'cells.6.layers.3.module.conv1_1x1.relu',
                        'l_116': 'cells.6.layers.3.module.conv1_1x1.conv',
                        'l_117': 'cells.6.layers.3.module.conv1_1x1.norm',
                        'l_118': 'cells.6.layers.3.module.conv2_3x3.relu',
                        'l_119': 'cells.6.layers.3.module.conv2_3x3.conv',
                        'l_120': 'cells.6.layers.3.module.conv2_3x3.norm',
                        'l_121': 'cells.6.layers.3.module.conv3_1x1.relu',
                        'l_122': 'cells.6.layers.3.module.conv3_1x1.conv',
                        'l_123': 'cells.6.layers.3.module.conv3_1x1.norm',
                        'l_124': 'cells.6.layers.5',
                        'l_125': 'cells.6.layers.6.module.conv1_1x1.relu',
                        'l_126': 'cells.6.layers.6.module.conv1_1x1.conv',
                        'l_127': 'cells.6.layers.6.module.conv1_1x1.norm',
                        'l_128': 'cells.6.layers.6.module.conv2_1x7.relu',
                        'l_129': 'cells.6.layers.6.module.conv2_1x7.conv',
                        'l_130': 'cells.6.layers.6.module.conv2_1x7.norm',
                        'l_131': 'cells.6.layers.6.module.conv3_7x1.relu',
                        'l_132': 'cells.6.layers.6.module.conv3_7x1.conv',
                        'l_133': 'cells.6.layers.6.module.conv3_7x1.norm',
                        'l_134': 'cells.6.layers.6.module.conv4_1x1.relu',
                        'l_135': 'cells.6.layers.6.module.conv4_1x1.conv',
                        'l_136': 'cells.6.layers.6.module.conv4_1x1.norm',
                        'l_137': 'cells.6.layers.7.module.pool',
                        'l_138': 'cells.6.layers.7.module.conv_cell.conv',
                        'l_139': 'cells.6.layers.7.module.conv_cell.norm',
                        'l_140': 'cells.6.layers.8',
                        'l_141': 'cells.6.layers.9.module.pool',
                        'l_142': 'cells.6.layers.9.module.conv_cell.conv',
                        'l_143': 'cells.6.layers.9.module.conv_cell.norm',
                        'l_144': 'cells.6.layers.10.module.relu',
                        'l_145': 'cells.6.layers.10.module.conv',
                        'l_146': 'cells.6.layers.10.module.norm',
                        'l_147': 'cells.6.layers.11',
                        'l_148': 'cells.6.layers.13.module.pool',
                        'l_149': 'cells.6.layers.13.module.conv_cell.conv',
                        'l_150': 'cells.6.layers.13.module.conv_cell.norm',
                        'l_151': 'cells.6.layers.14',
                        'l_152': 'cells.7.preprocess0.relu',
                        'l_153': 'cells.7.preprocess0.conv_1',
                        'l_154': 'cells.7.preprocess0.conv_2',
                        'l_155': 'cells.7.preprocess0.bn',
                        'l_156': 'cells.7.preprocess1.relu',
                        'l_157': 'cells.7.preprocess1.conv',
                        'l_158': 'cells.7.preprocess1.norm',
                        'l_159': 'cells.7.layers.0.module.pool',
                        'l_160': 'cells.7.layers.0.module.conv_cell.conv',
                        'l_161': 'cells.7.layers.0.module.conv_cell.norm',
                        'l_162': 'cells.7.layers.1.module.relu',
                        'l_163': 'cells.7.layers.1.module.conv',
                        'l_164': 'cells.7.layers.1.module.norm',
                        'l_165': 'cells.7.layers.2',
                        'l_166': 'cells.7.layers.4.module.pool',
                        'l_167': 'cells.7.layers.4.module.conv_cell.conv',
                        'l_168': 'cells.7.layers.4.module.conv_cell.norm',
                        'l_169': 'cells.7.layers.5',
                        'l_170': 'cells.7.layers.7.module.conv1_1x1.relu',
                        'l_171': 'cells.7.layers.7.module.conv1_1x1.conv',
                        'l_172': 'cells.7.layers.7.module.conv1_1x1.norm',
                        'l_173': 'cells.7.layers.7.module.conv2_1x7.relu',
                        'l_174': 'cells.7.layers.7.module.conv2_1x7.conv',
                        'l_175': 'cells.7.layers.7.module.conv2_1x7.norm',
                        'l_176': 'cells.7.layers.7.module.conv3_7x1.relu',
                        'l_177': 'cells.7.layers.7.module.conv3_7x1.conv',
                        'l_178': 'cells.7.layers.7.module.conv3_7x1.norm',
                        'l_179': 'cells.7.layers.7.module.conv4_1x1.relu',
                        'l_180': 'cells.7.layers.7.module.conv4_1x1.conv',
                        'l_181': 'cells.7.layers.7.module.conv4_1x1.norm',
                        'l_182': 'cells.7.layers.8',
                        'l_183': 'cells.7.layers.9.module.relu',
                        'l_184': 'cells.7.layers.9.module.conv',
                        'l_185': 'cells.7.layers.9.module.norm',
                        'l_186': 'cells.7.layers.10.module.conv1_1x1.relu',
                        'l_187': 'cells.7.layers.10.module.conv1_1x1.conv',
                        'l_188': 'cells.7.layers.10.module.conv1_1x1.norm',
                        'l_189': 'cells.7.layers.10.module.conv2_1x7.relu',
                        'l_190': 'cells.7.layers.10.module.conv2_1x7.conv',
                        'l_191': 'cells.7.layers.10.module.conv2_1x7.norm',
                        'l_192': 'cells.7.layers.10.module.conv3_7x1.relu',
                        'l_193': 'cells.7.layers.10.module.conv3_7x1.conv',
                        'l_194': 'cells.7.layers.10.module.conv3_7x1.norm',
                        'l_195': 'cells.7.layers.10.module.conv4_1x1.relu',
                        'l_196': 'cells.7.layers.10.module.conv4_1x1.conv',
                        'l_197': 'cells.7.layers.10.module.conv4_1x1.norm',
                        'l_198': 'cells.7.layers.11',
                        'l_199': 'cells.7.layers.12.module.pool',
                        'l_200': 'cells.7.layers.12.module.conv_cell.conv',
                        'l_201': 'cells.7.layers.12.module.conv_cell.norm',
                        'l_202': 'cells.7.layers.13.module.relu',
                        'l_203': 'cells.7.layers.13.module.conv',
                        'l_204': 'cells.7.layers.13.module.norm',
                        'l_205': 'cells.7.layers.14',
                        'l_206': 'cells.8.preprocess0.relu',
                        'l_207': 'cells.8.preprocess0.conv'}

    def forward(self, x0, x1, x2):
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_1
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_2
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_3
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_4
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_5
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_6
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_7
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_8
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_9
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2] <=> self.l_10
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_11
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_12
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_13
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[5] <=> self.l_14
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_15
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_16
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_17
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_18
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_19
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_20
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_21
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_22
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_23
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_24
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_25
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_26
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[8] <=> self.l_27
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_28
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_29
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_30
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_31
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_32
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_33
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_34
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_35
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_36
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_37
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_38
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_39
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_40
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_41
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_42
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[11] <=> self.l_43
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_44
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_45
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_46
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_47
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_48
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_49
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[14] <=> self.l_50
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_51
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_52
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_53
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_54
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_55
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_56
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_57
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_58
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_59
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_60
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2] <=> self.l_61
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_62
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_63
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_64
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[5] <=> self.l_65
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_66
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_67
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_68
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_69
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_70
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_71
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_72
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_73
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_74
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_75
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_76
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_77
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[8] <=> self.l_78
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_79
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_80
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_81
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_82
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_83
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_84
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_85
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_86
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_87
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_88
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_89
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_90
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_91
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_92
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_93
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[11] <=> self.l_94
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_95
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_96
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_97
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_98
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_99
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_100
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[14] <=> self.l_101
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_102
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_103
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_104
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_105
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_106
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_107
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_108
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_109
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_110
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_111
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_112
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_113
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2] <=> self.l_114
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_115
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_116
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_117
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] <=> self.l_118
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] <=> self.l_119
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] <=> self.l_120
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] <=> self.l_121
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] <=> self.l_122
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] <=> self.l_123
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5] <=> self.l_124
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_125
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_126
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_127
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_128
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_129
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_130
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_131
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_132
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_133
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_134
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_135
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_136
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_137
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_138
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_139
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[8] <=> self.l_140
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_141
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_142
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_143
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] <=> self.l_144
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] <=> self.l_145
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_146
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[11] <=> self.l_147
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_148
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_149
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_150
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[14] <=> self.l_151
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu] <=> self.l_152
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_1] <=> self.l_153
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/Conv2d[conv_2] <=> self.l_154
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] <=> self.l_155
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_156
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_157
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_158
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_159
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_160
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_161
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_162
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_163
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_164
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2] <=> self.l_165
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_166
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_167
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_168
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[5] <=> self.l_169
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_170
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_171
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_172
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_173
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_174
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_175
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_176
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_177
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_178
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_179
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_180
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_181
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[8] <=> self.l_182
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_183
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_184
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_185
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_186
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_187
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_188
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_189
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_190
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_191
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_192
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_193
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_194
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_195
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_196
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_197
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[11] <=> self.l_198
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_199
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_200
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_201
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_202
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_203
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_204
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[14] <=> self.l_205
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_206
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_207
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[3]/aten::cat4628 <=> x0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv] <=> x1
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv] <=> x2

        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_0 = self.l_0(x1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_1 = self.l_3(self.l_2(self.l_1(x0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_2 = self.l_10(self.l_6(self.l_5(self.l_4(t_0))), self.l_9(self.l_8(self.l_7(t_0))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_3 = self.l_24(self.l_23(self.l_22(self.l_21(self.l_20(self.l_19(self.l_18(self.l_17(self.l_16(self.l_15(t_1))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_4 = self.l_40(self.l_39(self.l_38(self.l_37(self.l_36(self.l_35(self.l_34(self.l_33(self.l_32(self.l_31(t_1))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/prim::ListConstruct5379
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[4]/prim::Constant5380
        t_5 = torch.cat(tensors=[self.l_27(t_0, self.l_26(self.l_25(t_3))), self.l_43(self.l_30(self.l_29(self.l_28(t_1))), self.l_42(self.l_41(t_4))), self.l_50(self.l_46(self.l_45(self.l_44(t_0))), self.l_49(self.l_48(self.l_47(self.l_14(t_2, self.l_13(self.l_12(self.l_11(t_2))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_6 = self.l_51(x2)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_7 = self.l_54(self.l_53(self.l_52(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_8 = self.l_61(self.l_57(self.l_56(self.l_55(t_6))), self.l_60(self.l_59(self.l_58(t_6))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_9 = self.l_75(self.l_74(self.l_73(self.l_72(self.l_71(self.l_70(self.l_69(self.l_68(self.l_67(self.l_66(t_7))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_10 = self.l_91(self.l_90(self.l_89(self.l_88(self.l_87(self.l_86(self.l_85(self.l_84(self.l_83(self.l_82(t_7))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/prim::ListConstruct6132
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/prim::Constant6133
        t_11 = torch.cat(tensors=[self.l_78(t_6, self.l_77(self.l_76(t_9))), self.l_94(self.l_81(self.l_80(self.l_79(t_7))), self.l_93(self.l_92(t_10))), self.l_101(self.l_97(self.l_96(self.l_95(t_6))), self.l_100(self.l_99(self.l_98(self.l_65(t_8, self.l_64(self.l_63(self.l_62(t_8))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_12 = self.l_104(self.l_103(self.l_102(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_13 = self.l_107(self.l_106(self.l_105(t_11)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        t_14 = self.l_114(self.l_110(self.l_109(self.l_108(t_13))), self.l_113(self.l_112(self.l_111(t_13))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[5] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/MergeTwo[2]
        t_15 = self.l_124(self.l_123(self.l_122(self.l_121(self.l_120(self.l_119(self.l_118(self.l_117(self.l_116(self.l_115(t_12))))))))), t_14)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_16 = self.l_134(self.l_133(self.l_132(self.l_131(self.l_130(self.l_129(self.l_128(self.l_127(self.l_126(self.l_125(t_14))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/prim::ListConstruct6867
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[6]/prim::Constant6868
        t_17 = torch.cat(tensors=[self.l_140(self.l_136(self.l_135(t_16)), self.l_139(self.l_138(self.l_137(t_14)))), self.l_147(self.l_143(self.l_142(self.l_141(t_14))), self.l_146(self.l_145(self.l_144(t_15)))), self.l_151(t_15, self.l_150(self.l_149(self.l_148(t_12))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[5]/aten::cat6134
        t_18 = self.l_152(t_11)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/FactorizedReduce[preprocess0]/aten::cat6931
        t_19 = self.l_155(torch.cat(tensors=[self.l_153(t_18), self.l_154(t_18[0:9223372036854775807:1][:, 0:9223372036854775807:1][:, :, 1:9223372036854775807:1][:, :, :, 1:9223372036854775807:1])], dim=1))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_20 = self.l_158(self.l_157(self.l_156(t_17)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_21 = self.l_165(self.l_161(self.l_160(self.l_159(t_19))), self.l_164(self.l_163(self.l_162(t_19))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_22 = self.l_179(self.l_178(self.l_177(self.l_176(self.l_175(self.l_174(self.l_173(self.l_172(self.l_171(self.l_170(t_20))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_23 = self.l_195(self.l_194(self.l_193(self.l_192(self.l_191(self.l_190(self.l_189(self.l_188(self.l_187(self.l_186(t_20))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/prim::ListConstruct7662
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/prim::Constant7663
        t_24 = torch.cat(tensors=[self.l_182(t_19, self.l_181(self.l_180(t_22))), self.l_198(self.l_185(self.l_184(self.l_183(t_20))), self.l_197(self.l_196(t_23))), self.l_205(self.l_201(self.l_200(self.l_199(t_19))), self.l_204(self.l_203(self.l_202(self.l_169(t_21, self.l_168(self.l_167(self.l_166(t_21))))))))], dim=1)
        # returing:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/aten::cat7664
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]
        return (t_24, self.l_207(self.l_206(t_17)))

    def state_dict(self,device):
        # we return the state dict of this part as it should be in the original model
        state = super().state_dict()
        lookup = self.lookup
        result = dict()
        for k, v in state.items():
            if k in lookup:
                result[lookup[k]] = v if device is None else v.to(device)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                result[new_k] = v if device is None else v.to(device)
        return result

    def load_state_dict(self, state):
        reverse_lookup = {v: k for k, v in self.lookup.items()}
        ts = chain(self.named_parameters(), self.named_buffers())
        device = list(ts)[0][1].device
        keys = list(self.state_dict(None).keys())
        new_state = dict()
        for k in keys:
            if k in reverse_lookup:
                new_state[reverse_lookup[k]] = state[k].to(device)
                continue
            idx = k.rfind(".")
            to_replace = k[:idx]
            if to_replace in reverse_lookup:
                key = reverse_lookup[to_replace] + k[idx:]
                new_state[key] = state[k].to(device)
        super().load_state_dict(new_state, strict=True)

    def named_parameters(self,recurse=True):
        # we return the named parameters of this part as it should be in the original model
        params = super().named_parameters(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)

    def named_buffers(self,recurse=True):
        # we return the named buffers of this part as it should be in the original model
        params = super().named_buffers(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)


class AmoebaNet_DPartition2(nn.Module):
    def __init__(self, layers, buffers, parameters):
        super(AmoebaNet_DPartition2, self).__init__()
        # initializing partition layers
        assert isinstance(layers,dict), f'expected layers to be of type dict but got type{type(layers)}'
        assert(len(layers) == 182)
        assert(all(isinstance(k, str) for k in layers.keys())), 'string keys are expected'
        assert(all(isinstance(v, nn.Module) for v in layers.values())), 'Module values are expected'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_0 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_0,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_0)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_1 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_1,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_1)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_2 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_2,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_2)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_3 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_3,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_3)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_4 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_4,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_4)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_5 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_5,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_5)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_6 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_6,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_6)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_7 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_7,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_7)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_8 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_8,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_8)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_9 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_9,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_9)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_10 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_10,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_10)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_11 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_11,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_11)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_12 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_12,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_12)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_13 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_13,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_13)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_14 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_14,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_14)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_15 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_15,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_15)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_16 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_16,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_16)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_17 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_17,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_17)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_18 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_18,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_18)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_19 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_19,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_19)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_20 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_20,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_20)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_21 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_21,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_21)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_22 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_22,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_22)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_23 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_23,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_23)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_24 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_24,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_24)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_25 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_25,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_25)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_26 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_26,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_26)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_27 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_27,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_27)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_28 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_28,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_28)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_29 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_29,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_29)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_30 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_30,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_30)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_31 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_31,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_31)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_32 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_32,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_32)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_33 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_33,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_33)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_34 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_34,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_34)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_35 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_35,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_35)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_36 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_36,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_36)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_37 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_37,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_37)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_38 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_38,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_38)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_39 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_39,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_39)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_40 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_40,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_40)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_41 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_41,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_41)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_42 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_42,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_42)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_43 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_43,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_43)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_44 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_44,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_44)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_45 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_45,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_45)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_46 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_46,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_46)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_47 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_47,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_47)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_48 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_48,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_48)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_49 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_49,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_49)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_50 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_50,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_50)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_51 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_51,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_51)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_52 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_52,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_52)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_53 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_53,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_53)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_54 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_54,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_54)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_55 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_55,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_55)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_56 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_56,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_56)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_57 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_57,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_57)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_58 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_58,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_58)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_59 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_59,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_59)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_60 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_60,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_60)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_61 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_61,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_61)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_62 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_62,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_62)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_63 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_63,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_63)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_64 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_64,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_64)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_65 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_65,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_65)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_66 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_66,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_66)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_67 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_67,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_67)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_68 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_68,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_68)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_69 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_69,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_69)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_70 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_70,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_70)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_71 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_71,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_71)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_72 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_72,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_72)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_73 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_73,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_73)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_74 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_74,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_74)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_75 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_75,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_75)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_76 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_76,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_76)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_77 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_77,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_77)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_78 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_78,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_78)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_79 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_79,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_79)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_80 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_80,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_80)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_81 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_81,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_81)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_82 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_82,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_82)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_83 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_83,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_83)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_84 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_84,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_84)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_85 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_85,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_85)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_86 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_86,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_86)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_87 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_87,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_87)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_88 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_88,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_88)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_89 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_89,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_89)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_90 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_90,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_90)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_91 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_91,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_91)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_92 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_92,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_92)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_93 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_93,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_93)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_94 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_94,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_94)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_95 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_95,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_95)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_96 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_96,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_96)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_97 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_97,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_97)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_98 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_98,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_98)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_99 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_99,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_99)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_100 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_100,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_100)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_101 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_101,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_101)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_102 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_102,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_102)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_103 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_103,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_103)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_104 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_104,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_104)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_105 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_105,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_105)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_106 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_106,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_106)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_107 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_107,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_107)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_108 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_108,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_108)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_109 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_109,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_109)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_110 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_110,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_110)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_111 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_111,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_111)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_112 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_112,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_112)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_113 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_113,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_113)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_114 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_114,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_114)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_115 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_115,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_115)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_116 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_116,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_116)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_117 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_117,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_117)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_118 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_118,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_118)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_119 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_119,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_119)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_120 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_120,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_120)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_121 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_121,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_121)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_122 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_122,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_122)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_123 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_123,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_123)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_124 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_124,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_124)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_125 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_125,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_125)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_126 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_126,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_126)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_127 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_127,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_127)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_128 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_128,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_128)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_129 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_129,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_129)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_130 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_130,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_130)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_131 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_131,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_131)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_132 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_132,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_132)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_133 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_133,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_133)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_134 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_134,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_134)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_135 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_135,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_135)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_136 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_136,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_136)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_137 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_137,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_137)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_138 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_138,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_138)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_139 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_139,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_139)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_140 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_140,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_140)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_141 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_141,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_141)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_142 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_142,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_142)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_143 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_143,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_143)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_144 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_144,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_144)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_145 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_145,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_145)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_146 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_146,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_146)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_147 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_147,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_147)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_148 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_148,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_148)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_149 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_149,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_149)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_150 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_150,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_150)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_151 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_151,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_151)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_152 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_152,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_152)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_153 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_153,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_153)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_154 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_154,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_154)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_155 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_155,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_155)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_156 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_156,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_156)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_157 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_157,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_157)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_158 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_158,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_158)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_159 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_159,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_159)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu] was expected but not given'
        self.l_160 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_160,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_160)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1] was expected but not given'
        self.l_161 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1]']
        assert isinstance(self.l_161,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1]] is expected to be of type Conv2d but was of type {type(self.l_161)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2] was expected but not given'
        self.l_162 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2]']
        assert isinstance(self.l_162,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2]] is expected to be of type Conv2d but was of type {type(self.l_162)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] was expected but not given'
        self.l_163 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]']
        assert isinstance(self.l_163,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]] is expected to be of type BatchNorm2d but was of type {type(self.l_163)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_164 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_164,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_164)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_165 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_165,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_165)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_166 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_166,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_166)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_167 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_167,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_167)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_168 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_168,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_168)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_169 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_169,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_169)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_170 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_170,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_170)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_171 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_171,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_171)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_172 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_172,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_172)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_173 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_173,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_173)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_174 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_174,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_174)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_175 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_175,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_175)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_176 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_176,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_176)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_177 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_177,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_177)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_178 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_178,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_178)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_179 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_179,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_179)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_180 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_180,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_180)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_181 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_181,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_181)}'

        # initializing partition buffers
        assert isinstance(buffers,dict), f'expected buffers to be of type dict got {type(buffers)}'
        assert len(buffers) == 0, f'expected buffers to have 0 elements but has {len(buffers)} elements'
        assert all(isinstance(k,str) for k in buffers.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in buffers.values()), 'Tensor values are expected'
        
        # initializing partition parameters
        assert isinstance(parameters,dict), f'expected parameters to be of type dict got {type(parameters)}'
        assert len(parameters) == 0, f'expected parameters to have 0 elements but has {len(parameters)} elements'
        assert all(isinstance(k,str) for k in parameters.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in parameters.values()), 'Tensor values are expected'
        self.device = torch.device('cuda:2')
        self.lookup = { 'l_0': 'cells.8.preprocess0.norm',
                        'l_1': 'cells.8.preprocess1.relu',
                        'l_2': 'cells.8.preprocess1.conv',
                        'l_3': 'cells.8.preprocess1.norm',
                        'l_4': 'cells.8.layers.0.module.pool',
                        'l_5': 'cells.8.layers.0.module.conv_cell.conv',
                        'l_6': 'cells.8.layers.0.module.conv_cell.norm',
                        'l_7': 'cells.8.layers.1.module.relu',
                        'l_8': 'cells.8.layers.1.module.conv',
                        'l_9': 'cells.8.layers.1.module.norm',
                        'l_10': 'cells.8.layers.2',
                        'l_11': 'cells.8.layers.4.module.pool',
                        'l_12': 'cells.8.layers.4.module.conv_cell.conv',
                        'l_13': 'cells.8.layers.4.module.conv_cell.norm',
                        'l_14': 'cells.8.layers.5',
                        'l_15': 'cells.8.layers.7.module.conv1_1x1.relu',
                        'l_16': 'cells.8.layers.7.module.conv1_1x1.conv',
                        'l_17': 'cells.8.layers.7.module.conv1_1x1.norm',
                        'l_18': 'cells.8.layers.7.module.conv2_1x7.relu',
                        'l_19': 'cells.8.layers.7.module.conv2_1x7.conv',
                        'l_20': 'cells.8.layers.7.module.conv2_1x7.norm',
                        'l_21': 'cells.8.layers.7.module.conv3_7x1.relu',
                        'l_22': 'cells.8.layers.7.module.conv3_7x1.conv',
                        'l_23': 'cells.8.layers.7.module.conv3_7x1.norm',
                        'l_24': 'cells.8.layers.7.module.conv4_1x1.relu',
                        'l_25': 'cells.8.layers.7.module.conv4_1x1.conv',
                        'l_26': 'cells.8.layers.7.module.conv4_1x1.norm',
                        'l_27': 'cells.8.layers.8',
                        'l_28': 'cells.8.layers.9.module.relu',
                        'l_29': 'cells.8.layers.9.module.conv',
                        'l_30': 'cells.8.layers.9.module.norm',
                        'l_31': 'cells.8.layers.10.module.conv1_1x1.relu',
                        'l_32': 'cells.8.layers.10.module.conv1_1x1.conv',
                        'l_33': 'cells.8.layers.10.module.conv1_1x1.norm',
                        'l_34': 'cells.8.layers.10.module.conv2_1x7.relu',
                        'l_35': 'cells.8.layers.10.module.conv2_1x7.conv',
                        'l_36': 'cells.8.layers.10.module.conv2_1x7.norm',
                        'l_37': 'cells.8.layers.10.module.conv3_7x1.relu',
                        'l_38': 'cells.8.layers.10.module.conv3_7x1.conv',
                        'l_39': 'cells.8.layers.10.module.conv3_7x1.norm',
                        'l_40': 'cells.8.layers.10.module.conv4_1x1.relu',
                        'l_41': 'cells.8.layers.10.module.conv4_1x1.conv',
                        'l_42': 'cells.8.layers.10.module.conv4_1x1.norm',
                        'l_43': 'cells.8.layers.11',
                        'l_44': 'cells.8.layers.12.module.pool',
                        'l_45': 'cells.8.layers.12.module.conv_cell.conv',
                        'l_46': 'cells.8.layers.12.module.conv_cell.norm',
                        'l_47': 'cells.8.layers.13.module.relu',
                        'l_48': 'cells.8.layers.13.module.conv',
                        'l_49': 'cells.8.layers.13.module.norm',
                        'l_50': 'cells.8.layers.14',
                        'l_51': 'cells.9.preprocess0.relu',
                        'l_52': 'cells.9.preprocess0.conv',
                        'l_53': 'cells.9.preprocess0.norm',
                        'l_54': 'cells.9.preprocess1.relu',
                        'l_55': 'cells.9.preprocess1.conv',
                        'l_56': 'cells.9.preprocess1.norm',
                        'l_57': 'cells.9.layers.0.module.pool',
                        'l_58': 'cells.9.layers.0.module.conv_cell.conv',
                        'l_59': 'cells.9.layers.0.module.conv_cell.norm',
                        'l_60': 'cells.9.layers.1.module.relu',
                        'l_61': 'cells.9.layers.1.module.conv',
                        'l_62': 'cells.9.layers.1.module.norm',
                        'l_63': 'cells.9.layers.2',
                        'l_64': 'cells.9.layers.4.module.pool',
                        'l_65': 'cells.9.layers.4.module.conv_cell.conv',
                        'l_66': 'cells.9.layers.4.module.conv_cell.norm',
                        'l_67': 'cells.9.layers.5',
                        'l_68': 'cells.9.layers.7.module.conv1_1x1.relu',
                        'l_69': 'cells.9.layers.7.module.conv1_1x1.conv',
                        'l_70': 'cells.9.layers.7.module.conv1_1x1.norm',
                        'l_71': 'cells.9.layers.7.module.conv2_1x7.relu',
                        'l_72': 'cells.9.layers.7.module.conv2_1x7.conv',
                        'l_73': 'cells.9.layers.7.module.conv2_1x7.norm',
                        'l_74': 'cells.9.layers.7.module.conv3_7x1.relu',
                        'l_75': 'cells.9.layers.7.module.conv3_7x1.conv',
                        'l_76': 'cells.9.layers.7.module.conv3_7x1.norm',
                        'l_77': 'cells.9.layers.7.module.conv4_1x1.relu',
                        'l_78': 'cells.9.layers.7.module.conv4_1x1.conv',
                        'l_79': 'cells.9.layers.7.module.conv4_1x1.norm',
                        'l_80': 'cells.9.layers.8',
                        'l_81': 'cells.9.layers.9.module.relu',
                        'l_82': 'cells.9.layers.9.module.conv',
                        'l_83': 'cells.9.layers.9.module.norm',
                        'l_84': 'cells.9.layers.10.module.conv1_1x1.relu',
                        'l_85': 'cells.9.layers.10.module.conv1_1x1.conv',
                        'l_86': 'cells.9.layers.10.module.conv1_1x1.norm',
                        'l_87': 'cells.9.layers.10.module.conv2_1x7.relu',
                        'l_88': 'cells.9.layers.10.module.conv2_1x7.conv',
                        'l_89': 'cells.9.layers.10.module.conv2_1x7.norm',
                        'l_90': 'cells.9.layers.10.module.conv3_7x1.relu',
                        'l_91': 'cells.9.layers.10.module.conv3_7x1.conv',
                        'l_92': 'cells.9.layers.10.module.conv3_7x1.norm',
                        'l_93': 'cells.9.layers.10.module.conv4_1x1.relu',
                        'l_94': 'cells.9.layers.10.module.conv4_1x1.conv',
                        'l_95': 'cells.9.layers.10.module.conv4_1x1.norm',
                        'l_96': 'cells.9.layers.11',
                        'l_97': 'cells.9.layers.12.module.pool',
                        'l_98': 'cells.9.layers.12.module.conv_cell.conv',
                        'l_99': 'cells.9.layers.12.module.conv_cell.norm',
                        'l_100': 'cells.9.layers.13.module.relu',
                        'l_101': 'cells.9.layers.13.module.conv',
                        'l_102': 'cells.9.layers.13.module.norm',
                        'l_103': 'cells.9.layers.14',
                        'l_104': 'cells.10.preprocess0.relu',
                        'l_105': 'cells.10.preprocess0.conv',
                        'l_106': 'cells.10.preprocess0.norm',
                        'l_107': 'cells.10.preprocess1.relu',
                        'l_108': 'cells.10.preprocess1.conv',
                        'l_109': 'cells.10.preprocess1.norm',
                        'l_110': 'cells.10.layers.0.module.pool',
                        'l_111': 'cells.10.layers.0.module.conv_cell.conv',
                        'l_112': 'cells.10.layers.0.module.conv_cell.norm',
                        'l_113': 'cells.10.layers.1.module.relu',
                        'l_114': 'cells.10.layers.1.module.conv',
                        'l_115': 'cells.10.layers.1.module.norm',
                        'l_116': 'cells.10.layers.2',
                        'l_117': 'cells.10.layers.4.module.pool',
                        'l_118': 'cells.10.layers.4.module.conv_cell.conv',
                        'l_119': 'cells.10.layers.4.module.conv_cell.norm',
                        'l_120': 'cells.10.layers.5',
                        'l_121': 'cells.10.layers.7.module.conv1_1x1.relu',
                        'l_122': 'cells.10.layers.7.module.conv1_1x1.conv',
                        'l_123': 'cells.10.layers.7.module.conv1_1x1.norm',
                        'l_124': 'cells.10.layers.7.module.conv2_1x7.relu',
                        'l_125': 'cells.10.layers.7.module.conv2_1x7.conv',
                        'l_126': 'cells.10.layers.7.module.conv2_1x7.norm',
                        'l_127': 'cells.10.layers.7.module.conv3_7x1.relu',
                        'l_128': 'cells.10.layers.7.module.conv3_7x1.conv',
                        'l_129': 'cells.10.layers.7.module.conv3_7x1.norm',
                        'l_130': 'cells.10.layers.7.module.conv4_1x1.relu',
                        'l_131': 'cells.10.layers.7.module.conv4_1x1.conv',
                        'l_132': 'cells.10.layers.7.module.conv4_1x1.norm',
                        'l_133': 'cells.10.layers.8',
                        'l_134': 'cells.10.layers.9.module.relu',
                        'l_135': 'cells.10.layers.9.module.conv',
                        'l_136': 'cells.10.layers.9.module.norm',
                        'l_137': 'cells.10.layers.10.module.conv1_1x1.relu',
                        'l_138': 'cells.10.layers.10.module.conv1_1x1.conv',
                        'l_139': 'cells.10.layers.10.module.conv1_1x1.norm',
                        'l_140': 'cells.10.layers.10.module.conv2_1x7.relu',
                        'l_141': 'cells.10.layers.10.module.conv2_1x7.conv',
                        'l_142': 'cells.10.layers.10.module.conv2_1x7.norm',
                        'l_143': 'cells.10.layers.10.module.conv3_7x1.relu',
                        'l_144': 'cells.10.layers.10.module.conv3_7x1.conv',
                        'l_145': 'cells.10.layers.10.module.conv3_7x1.norm',
                        'l_146': 'cells.10.layers.10.module.conv4_1x1.relu',
                        'l_147': 'cells.10.layers.10.module.conv4_1x1.conv',
                        'l_148': 'cells.10.layers.10.module.conv4_1x1.norm',
                        'l_149': 'cells.10.layers.11',
                        'l_150': 'cells.10.layers.12.module.pool',
                        'l_151': 'cells.10.layers.12.module.conv_cell.conv',
                        'l_152': 'cells.10.layers.12.module.conv_cell.norm',
                        'l_153': 'cells.10.layers.13.module.relu',
                        'l_154': 'cells.10.layers.13.module.conv',
                        'l_155': 'cells.10.layers.13.module.norm',
                        'l_156': 'cells.10.layers.14',
                        'l_157': 'cells.11.preprocess0.relu',
                        'l_158': 'cells.11.preprocess1.relu',
                        'l_159': 'cells.11.preprocess1.conv',
                        'l_160': 'cells.12.preprocess0.relu',
                        'l_161': 'cells.12.preprocess0.conv_1',
                        'l_162': 'cells.12.preprocess0.conv_2',
                        'l_163': 'cells.12.preprocess0.bn',
                        'l_164': 'cells.12.layers.0.module.pool',
                        'l_165': 'cells.12.layers.0.module.conv_cell.conv',
                        'l_166': 'cells.12.layers.0.module.conv_cell.norm',
                        'l_167': 'cells.12.layers.1.module.relu',
                        'l_168': 'cells.12.layers.1.module.conv',
                        'l_169': 'cells.12.layers.1.module.norm',
                        'l_170': 'cells.12.layers.2',
                        'l_171': 'cells.12.layers.4.module.pool',
                        'l_172': 'cells.12.layers.4.module.conv_cell.conv',
                        'l_173': 'cells.12.layers.4.module.conv_cell.norm',
                        'l_174': 'cells.12.layers.5',
                        'l_175': 'cells.12.layers.12.module.pool',
                        'l_176': 'cells.12.layers.12.module.conv_cell.conv',
                        'l_177': 'cells.12.layers.12.module.conv_cell.norm',
                        'l_178': 'cells.12.layers.13.module.relu',
                        'l_179': 'cells.12.layers.13.module.conv',
                        'l_180': 'cells.12.layers.13.module.norm',
                        'l_181': 'cells.12.layers.14'}

    def forward(self, x0, x1):
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_1
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_2
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_3
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_4
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_5
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_6
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_7
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_8
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_9
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2] <=> self.l_10
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_11
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_12
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_13
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[5] <=> self.l_14
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_15
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_16
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_17
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_18
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_19
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_20
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_21
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_22
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_23
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_24
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_25
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_26
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[8] <=> self.l_27
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_28
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_29
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_30
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_31
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_32
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_33
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_34
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_35
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_36
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_37
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_38
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_39
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_40
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_41
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_42
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[11] <=> self.l_43
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_44
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_45
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_46
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_47
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_48
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_49
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[14] <=> self.l_50
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_51
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_52
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_53
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_54
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_55
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_56
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_57
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_58
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_59
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_60
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_61
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_62
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2] <=> self.l_63
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_64
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_65
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_66
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[5] <=> self.l_67
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_68
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_69
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_70
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_71
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_72
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_73
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_74
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_75
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_76
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_77
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_78
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_79
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[8] <=> self.l_80
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_81
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_82
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_83
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_84
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_85
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_86
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_87
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_88
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_89
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_90
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_91
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_92
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_93
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_94
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_95
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[11] <=> self.l_96
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_97
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_98
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_99
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_100
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_101
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_102
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[14] <=> self.l_103
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_104
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_105
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_106
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_107
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_108
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_109
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_110
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_111
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_112
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_113
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_114
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_115
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2] <=> self.l_116
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_117
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_118
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_119
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[5] <=> self.l_120
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_121
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_122
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_123
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_124
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_125
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_126
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_127
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_128
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_129
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_130
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_131
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_132
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[8] <=> self.l_133
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_134
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_135
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_136
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_137
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_138
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_139
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_140
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_141
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_142
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_143
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_144
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_145
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_146
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_147
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_148
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[11] <=> self.l_149
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_150
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_151
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_152
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_153
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_154
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_155
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[14] <=> self.l_156
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_157
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_158
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_159
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu] <=> self.l_160
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_1] <=> self.l_161
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/Conv2d[conv_2] <=> self.l_162
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] <=> self.l_163
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_164
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_165
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_166
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_167
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_168
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_169
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2] <=> self.l_170
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_171
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_172
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_173
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[5] <=> self.l_174
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_175
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_176
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_177
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_178
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_179
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_180
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14] <=> self.l_181
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[7]/aten::cat7664 <=> x0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv] <=> x1

        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_0 = self.l_0(x1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_1 = self.l_3(self.l_2(self.l_1(x0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_2 = self.l_10(self.l_6(self.l_5(self.l_4(t_0))), self.l_9(self.l_8(self.l_7(t_0))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_3 = self.l_24(self.l_23(self.l_22(self.l_21(self.l_20(self.l_19(self.l_18(self.l_17(self.l_16(self.l_15(t_1))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_4 = self.l_40(self.l_39(self.l_38(self.l_37(self.l_36(self.l_35(self.l_34(self.l_33(self.l_32(self.l_31(t_1))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/prim::ListConstruct8415
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[8]/prim::Constant8416
        t_5 = torch.cat(tensors=[self.l_27(t_0, self.l_26(self.l_25(t_3))), self.l_43(self.l_30(self.l_29(self.l_28(t_1))), self.l_42(self.l_41(t_4))), self.l_50(self.l_46(self.l_45(self.l_44(t_0))), self.l_49(self.l_48(self.l_47(self.l_14(t_2, self.l_13(self.l_12(self.l_11(t_2))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_6 = self.l_53(self.l_52(self.l_51(x0)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_7 = self.l_56(self.l_55(self.l_54(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_8 = self.l_63(self.l_59(self.l_58(self.l_57(t_6))), self.l_62(self.l_61(self.l_60(t_6))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_9 = self.l_77(self.l_76(self.l_75(self.l_74(self.l_73(self.l_72(self.l_71(self.l_70(self.l_69(self.l_68(t_7))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_10 = self.l_93(self.l_92(self.l_91(self.l_90(self.l_89(self.l_88(self.l_87(self.l_86(self.l_85(self.l_84(t_7))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/prim::ListConstruct9168
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[9]/prim::Constant9169
        t_11 = torch.cat(tensors=[self.l_80(t_6, self.l_79(self.l_78(t_9))), self.l_96(self.l_83(self.l_82(self.l_81(t_7))), self.l_95(self.l_94(t_10))), self.l_103(self.l_99(self.l_98(self.l_97(t_6))), self.l_102(self.l_101(self.l_100(self.l_67(t_8, self.l_66(self.l_65(self.l_64(t_8))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_12 = self.l_106(self.l_105(self.l_104(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_13 = self.l_109(self.l_108(self.l_107(t_11)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_14 = self.l_116(self.l_112(self.l_111(self.l_110(t_12))), self.l_115(self.l_114(self.l_113(t_12))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_15 = self.l_130(self.l_129(self.l_128(self.l_127(self.l_126(self.l_125(self.l_124(self.l_123(self.l_122(self.l_121(t_13))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_16 = self.l_146(self.l_145(self.l_144(self.l_143(self.l_142(self.l_141(self.l_140(self.l_139(self.l_138(self.l_137(t_13))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/prim::ListConstruct9921
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/prim::Constant9922
        t_17 = torch.cat(tensors=[self.l_133(t_12, self.l_132(self.l_131(t_15))), self.l_149(self.l_136(self.l_135(self.l_134(t_13))), self.l_148(self.l_147(t_16))), self.l_156(self.l_152(self.l_151(self.l_150(t_12))), self.l_155(self.l_154(self.l_153(self.l_120(t_14, self.l_119(self.l_118(self.l_117(t_14))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[10]/aten::cat9923
        t_18 = self.l_160(t_17)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/aten::cat10720
        t_19 = self.l_163(torch.cat(tensors=[self.l_161(t_18), self.l_162(t_18[0:9223372036854775807:1][:, 0:9223372036854775807:1][:, :, 1:9223372036854775807:1][:, :, :, 1:9223372036854775807:1])], dim=1))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_20 = self.l_170(self.l_166(self.l_165(self.l_164(t_19))), self.l_169(self.l_168(self.l_167(t_19))))
        # returing:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14]
        return (self.l_157(t_11), self.l_159(self.l_158(t_17)), t_19, self.l_181(self.l_177(self.l_176(self.l_175(t_19))), self.l_180(self.l_179(self.l_178(self.l_174(t_20, self.l_173(self.l_172(self.l_171(t_20)))))))))

    def state_dict(self,device):
        # we return the state dict of this part as it should be in the original model
        state = super().state_dict()
        lookup = self.lookup
        result = dict()
        for k, v in state.items():
            if k in lookup:
                result[lookup[k]] = v if device is None else v.to(device)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                result[new_k] = v if device is None else v.to(device)
        return result

    def load_state_dict(self, state):
        reverse_lookup = {v: k for k, v in self.lookup.items()}
        ts = chain(self.named_parameters(), self.named_buffers())
        device = list(ts)[0][1].device
        keys = list(self.state_dict(None).keys())
        new_state = dict()
        for k in keys:
            if k in reverse_lookup:
                new_state[reverse_lookup[k]] = state[k].to(device)
                continue
            idx = k.rfind(".")
            to_replace = k[:idx]
            if to_replace in reverse_lookup:
                key = reverse_lookup[to_replace] + k[idx:]
                new_state[key] = state[k].to(device)
        super().load_state_dict(new_state, strict=True)

    def named_parameters(self,recurse=True):
        # we return the named parameters of this part as it should be in the original model
        params = super().named_parameters(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)

    def named_buffers(self,recurse=True):
        # we return the named buffers of this part as it should be in the original model
        params = super().named_buffers(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)


class AmoebaNet_DPartition3(nn.Module):
    def __init__(self, layers, buffers, parameters):
        super(AmoebaNet_DPartition3, self).__init__()
        # initializing partition layers
        assert isinstance(layers,dict), f'expected layers to be of type dict but got type{type(layers)}'
        assert(len(layers) == 240)
        assert(all(isinstance(k, str) for k in layers.keys())), 'string keys are expected'
        assert(all(isinstance(v, nn.Module) for v in layers.values())), 'Module values are expected'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_0 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_0,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_0)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_1 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_1,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_1)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_2 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_2,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_2)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_3 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_3,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_3)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_4 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_4,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_4)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_5 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_5,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_5)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_6 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_6,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_6)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_7 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_7,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_7)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_8 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_8,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_8)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_9 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_9,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_9)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_10 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_10,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_10)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_11 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_11,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_11)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_12 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_12,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_12)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] was expected but not given'
        self.l_13 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]']
        assert isinstance(self.l_13,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_13)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] was expected but not given'
        self.l_14 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]']
        assert isinstance(self.l_14,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_14)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] was expected but not given'
        self.l_15 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]']
        assert isinstance(self.l_15,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_15)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] was expected but not given'
        self.l_16 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]']
        assert isinstance(self.l_16,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_16)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] was expected but not given'
        self.l_17 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]']
        assert isinstance(self.l_17,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_17)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_18 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_18,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_18)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_19 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_19,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_19)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_20 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_20,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_20)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_21 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_21,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_21)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_22 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_22,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_22)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_23 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_23,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_23)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_24 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_24,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_24)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_25 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_25,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_25)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_26 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_26,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_26)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_27 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_27,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_27)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_28 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_28,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_28)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_29 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_29,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_29)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_30 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_30,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_30)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_31 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_31,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_31)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_32 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_32,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_32)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_33 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_33,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_33)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_34 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_34,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_34)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_35 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_35,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_35)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_36 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_36,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_36)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_37 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_37,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_37)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_38 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_38,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_38)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_39 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_39,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_39)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_40 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_40,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_40)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_41 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_41,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_41)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_42 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_42,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_42)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] was expected but not given'
        self.l_43 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]']
        assert isinstance(self.l_43,MaxPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool]] is expected to be of type MaxPool2d but was of type {type(self.l_43)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_44 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_44,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_44)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_45 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_45,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_45)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_46 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_46,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_46)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_47 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_47,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_47)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_48 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_48,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_48)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_49 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_49,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_49)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_50 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_50,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_50)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_51 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_51,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_51)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_52 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_52,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_52)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_53 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_53,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_53)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_54 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_54,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_54)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_55 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_55,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_55)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_56 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_56,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_56)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_57 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_57,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_57)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_58 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_58,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_58)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_59 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_59,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_59)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_60 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_60,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_60)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_61 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_61,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_61)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_62 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_62,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_62)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_63 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_63,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_63)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_64 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_64,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_64)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_65 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_65,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_65)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_66 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_66,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_66)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_67 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_67,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_67)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_68 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_68,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_68)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_69 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_69,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_69)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_70 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_70,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_70)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_71 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_71,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_71)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_72 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_72,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_72)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_73 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_73,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_73)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_74 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_74,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_74)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_75 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_75,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_75)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_76 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_76,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_76)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_77 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_77,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_77)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_78 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_78,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_78)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_79 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_79,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_79)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_80 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_80,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_80)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_81 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_81,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_81)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_82 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_82,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_82)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_83 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_83,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_83)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_84 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_84,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_84)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_85 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_85,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_85)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_86 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_86,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_86)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_87 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_87,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_87)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_88 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_88,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_88)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_89 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_89,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_89)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_90 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_90,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_90)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_91 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_91,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_91)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_92 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_92,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_92)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_93 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_93,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_93)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_94 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_94,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_94)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_95 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_95,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_95)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_96 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_96,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_96)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_97 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_97,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_97)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_98 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_98,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_98)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_99 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_99,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_99)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_100 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_100,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_100)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_101 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_101,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_101)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_102 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_102,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_102)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_103 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_103,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_103)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_104 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_104,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_104)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_105 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_105,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_105)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_106 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_106,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_106)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_107 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_107,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_107)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_108 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_108,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_108)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_109 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_109,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_109)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_110 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_110,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_110)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_111 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_111,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_111)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_112 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_112,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_112)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_113 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_113,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_113)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_114 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_114,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_114)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_115 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_115,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_115)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_116 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_116,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_116)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_117 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_117,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_117)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_118 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_118,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_118)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_119 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_119,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_119)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_120 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_120,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_120)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_121 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_121,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_121)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_122 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_122,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_122)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_123 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_123,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_123)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_124 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_124,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_124)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_125 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_125,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_125)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_126 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_126,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_126)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_127 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_127,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_127)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_128 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_128,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_128)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_129 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_129,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_129)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_130 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_130,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_130)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_131 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_131,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_131)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_132 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_132,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_132)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_133 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_133,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_133)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_134 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_134,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_134)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_135 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_135,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_135)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_136 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_136,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_136)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_137 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_137,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_137)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_138 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_138,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_138)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_139 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_139,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_139)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_140 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_140,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_140)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_141 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_141,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_141)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_142 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_142,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_142)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_143 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_143,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_143)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_144 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_144,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_144)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_145 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_145,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_145)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_146 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_146,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_146)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_147 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_147,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_147)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_148 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_148,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_148)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_149 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_149,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_149)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_150 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_150,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_150)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_151 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_151,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_151)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_152 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_152,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_152)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_153 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_153,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_153)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_154 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_154,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_154)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_155 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_155,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_155)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_156 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_156,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_156)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_157 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_157,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_157)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_158 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_158,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_158)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_159 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_159,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_159)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_160 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_160,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_160)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_161 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_161,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_161)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_162 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_162,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_162)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_163 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_163,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_163)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_164 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_164,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_164)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_165 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_165,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_165)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_166 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_166,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_166)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_167 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_167,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_167)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_168 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_168,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_168)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_169 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_169,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_169)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_170 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_170,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_170)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_171 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_171,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_171)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_172 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_172,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_172)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_173 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_173,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_173)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_174 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_174,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_174)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_175 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_175,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_175)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_176 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_176,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_176)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_177 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_177,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_177)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_178 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_178,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_178)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_179 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_179,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_179)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_180 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_180,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_180)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_181 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_181,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_181)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_182 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_182,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_182)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_183 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_183,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_183)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_184 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_184,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_184)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu] was expected but not given'
        self.l_185 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu]']
        assert isinstance(self.l_185,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_185)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv] was expected but not given'
        self.l_186 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]']
        assert isinstance(self.l_186,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_186)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm] was expected but not given'
        self.l_187 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm]']
        assert isinstance(self.l_187,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_187)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu] was expected but not given'
        self.l_188 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu]']
        assert isinstance(self.l_188,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_188)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv] was expected but not given'
        self.l_189 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]']
        assert isinstance(self.l_189,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_189)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm] was expected but not given'
        self.l_190 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm]']
        assert isinstance(self.l_190,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_190)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_191 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_191,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_191)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_192 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_192,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_192)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_193 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_193,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_193)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_194 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_194,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_194)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_195 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_195,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_195)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_196 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_196,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_196)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2] was expected but not given'
        self.l_197 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2]']
        assert isinstance(self.l_197,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2]] is expected to be of type MergeTwo but was of type {type(self.l_197)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_198 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_198,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_198)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_199 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_199,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_199)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_200 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_200,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_200)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5] was expected but not given'
        self.l_201 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5]']
        assert isinstance(self.l_201,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5]] is expected to be of type MergeTwo but was of type {type(self.l_201)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_202 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_202,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_202)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_203 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_203,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_203)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_204 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_204,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_204)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_205 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_205,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_205)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_206 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_206,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_206)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_207 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_207,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_207)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_208 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_208,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_208)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_209 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_209,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_209)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_210 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_210,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_210)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_211 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_211,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_211)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_212 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_212,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_212)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_213 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_213,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_213)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8] was expected but not given'
        self.l_214 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8]']
        assert isinstance(self.l_214,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8]] is expected to be of type MergeTwo but was of type {type(self.l_214)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_215 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_215,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_215)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_216 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_216,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_216)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_217 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_217,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_217)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] was expected but not given'
        self.l_218 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]']
        assert isinstance(self.l_218,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_218)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] was expected but not given'
        self.l_219 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]']
        assert isinstance(self.l_219,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_219)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_220 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_220,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_220)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] was expected but not given'
        self.l_221 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]']
        assert isinstance(self.l_221,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_221)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] was expected but not given'
        self.l_222 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]']
        assert isinstance(self.l_222,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_222)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] was expected but not given'
        self.l_223 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]']
        assert isinstance(self.l_223,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_223)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] was expected but not given'
        self.l_224 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]']
        assert isinstance(self.l_224,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_224)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] was expected but not given'
        self.l_225 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]']
        assert isinstance(self.l_225,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_225)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] was expected but not given'
        self.l_226 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_226,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_226)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] was expected but not given'
        self.l_227 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]']
        assert isinstance(self.l_227,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_227)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] was expected but not given'
        self.l_228 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]']
        assert isinstance(self.l_228,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_228)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] was expected but not given'
        self.l_229 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]']
        assert isinstance(self.l_229,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_229)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11] was expected but not given'
        self.l_230 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11]']
        assert isinstance(self.l_230,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11]] is expected to be of type MergeTwo but was of type {type(self.l_230)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] was expected but not given'
        self.l_231 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]']
        assert isinstance(self.l_231,AvgPool2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool]] is expected to be of type AvgPool2d but was of type {type(self.l_231)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] was expected but not given'
        self.l_232 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]']
        assert isinstance(self.l_232,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_232)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] was expected but not given'
        self.l_233 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]']
        assert isinstance(self.l_233,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_233)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] was expected but not given'
        self.l_234 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]']
        assert isinstance(self.l_234,ReLU) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu]] is expected to be of type ReLU but was of type {type(self.l_234)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] was expected but not given'
        self.l_235 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]']
        assert isinstance(self.l_235,Conv2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv]] is expected to be of type Conv2d but was of type {type(self.l_235)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] was expected but not given'
        self.l_236 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]']
        assert isinstance(self.l_236,BatchNorm2d) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm]] is expected to be of type BatchNorm2d but was of type {type(self.l_236)}'
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14]
        assert 'AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14]' in layers, 'layer AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14] was expected but not given'
        self.l_237 = layers['AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14]']
        assert isinstance(self.l_237,MergeTwo) ,f'layers[AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14]] is expected to be of type MergeTwo but was of type {type(self.l_237)}'
        # AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling]
        assert 'AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling]' in layers, 'layer AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling] was expected but not given'
        self.l_238 = layers['AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling]']
        assert isinstance(self.l_238,AvgPool2d) ,f'layers[AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling]] is expected to be of type AvgPool2d but was of type {type(self.l_238)}'
        # AmoebaNet_D/Classifier[classifier]/Linear[classifier]
        assert 'AmoebaNet_D/Classifier[classifier]/Linear[classifier]' in layers, 'layer AmoebaNet_D/Classifier[classifier]/Linear[classifier] was expected but not given'
        self.l_239 = layers['AmoebaNet_D/Classifier[classifier]/Linear[classifier]']
        assert isinstance(self.l_239,Linear) ,f'layers[AmoebaNet_D/Classifier[classifier]/Linear[classifier]] is expected to be of type Linear but was of type {type(self.l_239)}'

        # initializing partition buffers
        assert isinstance(buffers,dict), f'expected buffers to be of type dict got {type(buffers)}'
        assert len(buffers) == 0, f'expected buffers to have 0 elements but has {len(buffers)} elements'
        assert all(isinstance(k,str) for k in buffers.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in buffers.values()), 'Tensor values are expected'
        
        # initializing partition parameters
        assert isinstance(parameters,dict), f'expected parameters to be of type dict got {type(parameters)}'
        assert len(parameters) == 0, f'expected parameters to have 0 elements but has {len(parameters)} elements'
        assert all(isinstance(k,str) for k in parameters.keys()), 'string keys are expected'
        assert all(isinstance(v,Tensor) for v in parameters.values()), 'Tensor values are expected'
        self.device = torch.device('cuda:3')
        self.lookup = { 'l_0': 'cells.11.preprocess0.conv',
                        'l_1': 'cells.11.preprocess0.norm',
                        'l_2': 'cells.11.preprocess1.norm',
                        'l_3': 'cells.11.layers.0.module.pool',
                        'l_4': 'cells.11.layers.0.module.conv_cell.conv',
                        'l_5': 'cells.11.layers.0.module.conv_cell.norm',
                        'l_6': 'cells.11.layers.1.module.pool',
                        'l_7': 'cells.11.layers.1.module.conv_cell.conv',
                        'l_8': 'cells.11.layers.1.module.conv_cell.norm',
                        'l_9': 'cells.11.layers.2',
                        'l_10': 'cells.11.layers.3.module.conv1_1x1.relu',
                        'l_11': 'cells.11.layers.3.module.conv1_1x1.conv',
                        'l_12': 'cells.11.layers.3.module.conv1_1x1.norm',
                        'l_13': 'cells.11.layers.3.module.conv2_3x3.relu',
                        'l_14': 'cells.11.layers.3.module.conv2_3x3.conv',
                        'l_15': 'cells.11.layers.3.module.conv2_3x3.norm',
                        'l_16': 'cells.11.layers.3.module.conv3_1x1.relu',
                        'l_17': 'cells.11.layers.3.module.conv3_1x1.conv',
                        'l_18': 'cells.11.layers.3.module.conv3_1x1.norm',
                        'l_19': 'cells.11.layers.5',
                        'l_20': 'cells.11.layers.6.module.conv1_1x1.relu',
                        'l_21': 'cells.11.layers.6.module.conv1_1x1.conv',
                        'l_22': 'cells.11.layers.6.module.conv1_1x1.norm',
                        'l_23': 'cells.11.layers.6.module.conv2_1x7.relu',
                        'l_24': 'cells.11.layers.6.module.conv2_1x7.conv',
                        'l_25': 'cells.11.layers.6.module.conv2_1x7.norm',
                        'l_26': 'cells.11.layers.6.module.conv3_7x1.relu',
                        'l_27': 'cells.11.layers.6.module.conv3_7x1.conv',
                        'l_28': 'cells.11.layers.6.module.conv3_7x1.norm',
                        'l_29': 'cells.11.layers.6.module.conv4_1x1.relu',
                        'l_30': 'cells.11.layers.6.module.conv4_1x1.conv',
                        'l_31': 'cells.11.layers.6.module.conv4_1x1.norm',
                        'l_32': 'cells.11.layers.7.module.pool',
                        'l_33': 'cells.11.layers.7.module.conv_cell.conv',
                        'l_34': 'cells.11.layers.7.module.conv_cell.norm',
                        'l_35': 'cells.11.layers.8',
                        'l_36': 'cells.11.layers.9.module.pool',
                        'l_37': 'cells.11.layers.9.module.conv_cell.conv',
                        'l_38': 'cells.11.layers.9.module.conv_cell.norm',
                        'l_39': 'cells.11.layers.10.module.relu',
                        'l_40': 'cells.11.layers.10.module.conv',
                        'l_41': 'cells.11.layers.10.module.norm',
                        'l_42': 'cells.11.layers.11',
                        'l_43': 'cells.11.layers.13.module.pool',
                        'l_44': 'cells.11.layers.13.module.conv_cell.conv',
                        'l_45': 'cells.11.layers.13.module.conv_cell.norm',
                        'l_46': 'cells.11.layers.14',
                        'l_47': 'cells.12.preprocess1.relu',
                        'l_48': 'cells.12.preprocess1.conv',
                        'l_49': 'cells.12.preprocess1.norm',
                        'l_50': 'cells.12.layers.7.module.conv1_1x1.relu',
                        'l_51': 'cells.12.layers.7.module.conv1_1x1.conv',
                        'l_52': 'cells.12.layers.7.module.conv1_1x1.norm',
                        'l_53': 'cells.12.layers.7.module.conv2_1x7.relu',
                        'l_54': 'cells.12.layers.7.module.conv2_1x7.conv',
                        'l_55': 'cells.12.layers.7.module.conv2_1x7.norm',
                        'l_56': 'cells.12.layers.7.module.conv3_7x1.relu',
                        'l_57': 'cells.12.layers.7.module.conv3_7x1.conv',
                        'l_58': 'cells.12.layers.7.module.conv3_7x1.norm',
                        'l_59': 'cells.12.layers.7.module.conv4_1x1.relu',
                        'l_60': 'cells.12.layers.7.module.conv4_1x1.conv',
                        'l_61': 'cells.12.layers.7.module.conv4_1x1.norm',
                        'l_62': 'cells.12.layers.8',
                        'l_63': 'cells.12.layers.9.module.relu',
                        'l_64': 'cells.12.layers.9.module.conv',
                        'l_65': 'cells.12.layers.9.module.norm',
                        'l_66': 'cells.12.layers.10.module.conv1_1x1.relu',
                        'l_67': 'cells.12.layers.10.module.conv1_1x1.conv',
                        'l_68': 'cells.12.layers.10.module.conv1_1x1.norm',
                        'l_69': 'cells.12.layers.10.module.conv2_1x7.relu',
                        'l_70': 'cells.12.layers.10.module.conv2_1x7.conv',
                        'l_71': 'cells.12.layers.10.module.conv2_1x7.norm',
                        'l_72': 'cells.12.layers.10.module.conv3_7x1.relu',
                        'l_73': 'cells.12.layers.10.module.conv3_7x1.conv',
                        'l_74': 'cells.12.layers.10.module.conv3_7x1.norm',
                        'l_75': 'cells.12.layers.10.module.conv4_1x1.relu',
                        'l_76': 'cells.12.layers.10.module.conv4_1x1.conv',
                        'l_77': 'cells.12.layers.10.module.conv4_1x1.norm',
                        'l_78': 'cells.12.layers.11',
                        'l_79': 'cells.13.preprocess0.relu',
                        'l_80': 'cells.13.preprocess0.conv',
                        'l_81': 'cells.13.preprocess0.norm',
                        'l_82': 'cells.13.preprocess1.relu',
                        'l_83': 'cells.13.preprocess1.conv',
                        'l_84': 'cells.13.preprocess1.norm',
                        'l_85': 'cells.13.layers.0.module.pool',
                        'l_86': 'cells.13.layers.0.module.conv_cell.conv',
                        'l_87': 'cells.13.layers.0.module.conv_cell.norm',
                        'l_88': 'cells.13.layers.1.module.relu',
                        'l_89': 'cells.13.layers.1.module.conv',
                        'l_90': 'cells.13.layers.1.module.norm',
                        'l_91': 'cells.13.layers.2',
                        'l_92': 'cells.13.layers.4.module.pool',
                        'l_93': 'cells.13.layers.4.module.conv_cell.conv',
                        'l_94': 'cells.13.layers.4.module.conv_cell.norm',
                        'l_95': 'cells.13.layers.5',
                        'l_96': 'cells.13.layers.7.module.conv1_1x1.relu',
                        'l_97': 'cells.13.layers.7.module.conv1_1x1.conv',
                        'l_98': 'cells.13.layers.7.module.conv1_1x1.norm',
                        'l_99': 'cells.13.layers.7.module.conv2_1x7.relu',
                        'l_100': 'cells.13.layers.7.module.conv2_1x7.conv',
                        'l_101': 'cells.13.layers.7.module.conv2_1x7.norm',
                        'l_102': 'cells.13.layers.7.module.conv3_7x1.relu',
                        'l_103': 'cells.13.layers.7.module.conv3_7x1.conv',
                        'l_104': 'cells.13.layers.7.module.conv3_7x1.norm',
                        'l_105': 'cells.13.layers.7.module.conv4_1x1.relu',
                        'l_106': 'cells.13.layers.7.module.conv4_1x1.conv',
                        'l_107': 'cells.13.layers.7.module.conv4_1x1.norm',
                        'l_108': 'cells.13.layers.8',
                        'l_109': 'cells.13.layers.9.module.relu',
                        'l_110': 'cells.13.layers.9.module.conv',
                        'l_111': 'cells.13.layers.9.module.norm',
                        'l_112': 'cells.13.layers.10.module.conv1_1x1.relu',
                        'l_113': 'cells.13.layers.10.module.conv1_1x1.conv',
                        'l_114': 'cells.13.layers.10.module.conv1_1x1.norm',
                        'l_115': 'cells.13.layers.10.module.conv2_1x7.relu',
                        'l_116': 'cells.13.layers.10.module.conv2_1x7.conv',
                        'l_117': 'cells.13.layers.10.module.conv2_1x7.norm',
                        'l_118': 'cells.13.layers.10.module.conv3_7x1.relu',
                        'l_119': 'cells.13.layers.10.module.conv3_7x1.conv',
                        'l_120': 'cells.13.layers.10.module.conv3_7x1.norm',
                        'l_121': 'cells.13.layers.10.module.conv4_1x1.relu',
                        'l_122': 'cells.13.layers.10.module.conv4_1x1.conv',
                        'l_123': 'cells.13.layers.10.module.conv4_1x1.norm',
                        'l_124': 'cells.13.layers.11',
                        'l_125': 'cells.13.layers.12.module.pool',
                        'l_126': 'cells.13.layers.12.module.conv_cell.conv',
                        'l_127': 'cells.13.layers.12.module.conv_cell.norm',
                        'l_128': 'cells.13.layers.13.module.relu',
                        'l_129': 'cells.13.layers.13.module.conv',
                        'l_130': 'cells.13.layers.13.module.norm',
                        'l_131': 'cells.13.layers.14',
                        'l_132': 'cells.14.preprocess0.relu',
                        'l_133': 'cells.14.preprocess0.conv',
                        'l_134': 'cells.14.preprocess0.norm',
                        'l_135': 'cells.14.preprocess1.relu',
                        'l_136': 'cells.14.preprocess1.conv',
                        'l_137': 'cells.14.preprocess1.norm',
                        'l_138': 'cells.14.layers.0.module.pool',
                        'l_139': 'cells.14.layers.0.module.conv_cell.conv',
                        'l_140': 'cells.14.layers.0.module.conv_cell.norm',
                        'l_141': 'cells.14.layers.1.module.relu',
                        'l_142': 'cells.14.layers.1.module.conv',
                        'l_143': 'cells.14.layers.1.module.norm',
                        'l_144': 'cells.14.layers.2',
                        'l_145': 'cells.14.layers.4.module.pool',
                        'l_146': 'cells.14.layers.4.module.conv_cell.conv',
                        'l_147': 'cells.14.layers.4.module.conv_cell.norm',
                        'l_148': 'cells.14.layers.5',
                        'l_149': 'cells.14.layers.7.module.conv1_1x1.relu',
                        'l_150': 'cells.14.layers.7.module.conv1_1x1.conv',
                        'l_151': 'cells.14.layers.7.module.conv1_1x1.norm',
                        'l_152': 'cells.14.layers.7.module.conv2_1x7.relu',
                        'l_153': 'cells.14.layers.7.module.conv2_1x7.conv',
                        'l_154': 'cells.14.layers.7.module.conv2_1x7.norm',
                        'l_155': 'cells.14.layers.7.module.conv3_7x1.relu',
                        'l_156': 'cells.14.layers.7.module.conv3_7x1.conv',
                        'l_157': 'cells.14.layers.7.module.conv3_7x1.norm',
                        'l_158': 'cells.14.layers.7.module.conv4_1x1.relu',
                        'l_159': 'cells.14.layers.7.module.conv4_1x1.conv',
                        'l_160': 'cells.14.layers.7.module.conv4_1x1.norm',
                        'l_161': 'cells.14.layers.8',
                        'l_162': 'cells.14.layers.9.module.relu',
                        'l_163': 'cells.14.layers.9.module.conv',
                        'l_164': 'cells.14.layers.9.module.norm',
                        'l_165': 'cells.14.layers.10.module.conv1_1x1.relu',
                        'l_166': 'cells.14.layers.10.module.conv1_1x1.conv',
                        'l_167': 'cells.14.layers.10.module.conv1_1x1.norm',
                        'l_168': 'cells.14.layers.10.module.conv2_1x7.relu',
                        'l_169': 'cells.14.layers.10.module.conv2_1x7.conv',
                        'l_170': 'cells.14.layers.10.module.conv2_1x7.norm',
                        'l_171': 'cells.14.layers.10.module.conv3_7x1.relu',
                        'l_172': 'cells.14.layers.10.module.conv3_7x1.conv',
                        'l_173': 'cells.14.layers.10.module.conv3_7x1.norm',
                        'l_174': 'cells.14.layers.10.module.conv4_1x1.relu',
                        'l_175': 'cells.14.layers.10.module.conv4_1x1.conv',
                        'l_176': 'cells.14.layers.10.module.conv4_1x1.norm',
                        'l_177': 'cells.14.layers.11',
                        'l_178': 'cells.14.layers.12.module.pool',
                        'l_179': 'cells.14.layers.12.module.conv_cell.conv',
                        'l_180': 'cells.14.layers.12.module.conv_cell.norm',
                        'l_181': 'cells.14.layers.13.module.relu',
                        'l_182': 'cells.14.layers.13.module.conv',
                        'l_183': 'cells.14.layers.13.module.norm',
                        'l_184': 'cells.14.layers.14',
                        'l_185': 'cells.15.preprocess0.relu',
                        'l_186': 'cells.15.preprocess0.conv',
                        'l_187': 'cells.15.preprocess0.norm',
                        'l_188': 'cells.15.preprocess1.relu',
                        'l_189': 'cells.15.preprocess1.conv',
                        'l_190': 'cells.15.preprocess1.norm',
                        'l_191': 'cells.15.layers.0.module.pool',
                        'l_192': 'cells.15.layers.0.module.conv_cell.conv',
                        'l_193': 'cells.15.layers.0.module.conv_cell.norm',
                        'l_194': 'cells.15.layers.1.module.relu',
                        'l_195': 'cells.15.layers.1.module.conv',
                        'l_196': 'cells.15.layers.1.module.norm',
                        'l_197': 'cells.15.layers.2',
                        'l_198': 'cells.15.layers.4.module.pool',
                        'l_199': 'cells.15.layers.4.module.conv_cell.conv',
                        'l_200': 'cells.15.layers.4.module.conv_cell.norm',
                        'l_201': 'cells.15.layers.5',
                        'l_202': 'cells.15.layers.7.module.conv1_1x1.relu',
                        'l_203': 'cells.15.layers.7.module.conv1_1x1.conv',
                        'l_204': 'cells.15.layers.7.module.conv1_1x1.norm',
                        'l_205': 'cells.15.layers.7.module.conv2_1x7.relu',
                        'l_206': 'cells.15.layers.7.module.conv2_1x7.conv',
                        'l_207': 'cells.15.layers.7.module.conv2_1x7.norm',
                        'l_208': 'cells.15.layers.7.module.conv3_7x1.relu',
                        'l_209': 'cells.15.layers.7.module.conv3_7x1.conv',
                        'l_210': 'cells.15.layers.7.module.conv3_7x1.norm',
                        'l_211': 'cells.15.layers.7.module.conv4_1x1.relu',
                        'l_212': 'cells.15.layers.7.module.conv4_1x1.conv',
                        'l_213': 'cells.15.layers.7.module.conv4_1x1.norm',
                        'l_214': 'cells.15.layers.8',
                        'l_215': 'cells.15.layers.9.module.relu',
                        'l_216': 'cells.15.layers.9.module.conv',
                        'l_217': 'cells.15.layers.9.module.norm',
                        'l_218': 'cells.15.layers.10.module.conv1_1x1.relu',
                        'l_219': 'cells.15.layers.10.module.conv1_1x1.conv',
                        'l_220': 'cells.15.layers.10.module.conv1_1x1.norm',
                        'l_221': 'cells.15.layers.10.module.conv2_1x7.relu',
                        'l_222': 'cells.15.layers.10.module.conv2_1x7.conv',
                        'l_223': 'cells.15.layers.10.module.conv2_1x7.norm',
                        'l_224': 'cells.15.layers.10.module.conv3_7x1.relu',
                        'l_225': 'cells.15.layers.10.module.conv3_7x1.conv',
                        'l_226': 'cells.15.layers.10.module.conv3_7x1.norm',
                        'l_227': 'cells.15.layers.10.module.conv4_1x1.relu',
                        'l_228': 'cells.15.layers.10.module.conv4_1x1.conv',
                        'l_229': 'cells.15.layers.10.module.conv4_1x1.norm',
                        'l_230': 'cells.15.layers.11',
                        'l_231': 'cells.15.layers.12.module.pool',
                        'l_232': 'cells.15.layers.12.module.conv_cell.conv',
                        'l_233': 'cells.15.layers.12.module.conv_cell.norm',
                        'l_234': 'cells.15.layers.13.module.relu',
                        'l_235': 'cells.15.layers.13.module.conv',
                        'l_236': 'cells.15.layers.13.module.norm',
                        'l_237': 'cells.15.layers.14',
                        'l_238': 'classifier.global_pooling',
                        'l_239': 'classifier.classifier'}

    def forward(self, x0, x1, x2, x3):
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_1
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_2
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_3
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_4
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_5
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_6
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_7
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_8
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2] <=> self.l_9
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_10
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_11
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_12
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/ReLU[relu] <=> self.l_13
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/Conv2d[conv] <=> self.l_14
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv2_3x3]/BatchNorm2d[norm] <=> self.l_15
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/ReLU[relu] <=> self.l_16
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/Conv2d[conv] <=> self.l_17
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm] <=> self.l_18
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5] <=> self.l_19
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_20
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_21
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_22
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_23
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_24
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_25
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_26
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_27
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_28
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_29
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_30
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_31
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_32
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_33
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[7]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_34
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[8] <=> self.l_35
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_36
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_37
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[9]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_38
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/ReLU[relu] <=> self.l_39
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/Conv2d[conv] <=> self.l_40
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[10]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_41
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[11] <=> self.l_42
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/MaxPool2d[pool] <=> self.l_43
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_44
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[13]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_45
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[14] <=> self.l_46
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_47
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_48
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_49
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_50
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_51
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_52
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_53
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_54
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_55
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_56
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_57
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_58
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_59
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_60
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_61
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[8] <=> self.l_62
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_63
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_64
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_65
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_66
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_67
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_68
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_69
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_70
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_71
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_72
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_73
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_74
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_75
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_76
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_77
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[11] <=> self.l_78
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_79
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_80
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_81
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_82
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_83
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_84
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_85
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_86
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_87
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_88
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_89
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_90
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2] <=> self.l_91
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_92
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_93
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_94
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[5] <=> self.l_95
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_96
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_97
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_98
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_99
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_100
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_101
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_102
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_103
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_104
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_105
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_106
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_107
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[8] <=> self.l_108
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_109
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_110
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_111
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_112
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_113
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_114
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_115
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_116
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_117
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_118
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_119
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_120
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_121
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_122
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_123
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[11] <=> self.l_124
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_125
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_126
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_127
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_128
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_129
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_130
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[14] <=> self.l_131
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_132
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_133
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_134
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_135
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_136
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_137
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_138
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_139
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_140
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_141
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_142
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_143
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2] <=> self.l_144
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_145
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_146
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_147
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[5] <=> self.l_148
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_149
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_150
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_151
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_152
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_153
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_154
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_155
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_156
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_157
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_158
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_159
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_160
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[8] <=> self.l_161
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_162
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_163
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_164
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_165
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_166
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_167
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_168
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_169
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_170
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_171
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_172
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_173
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_174
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_175
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_176
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[11] <=> self.l_177
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_178
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_179
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_180
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_181
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_182
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_183
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[14] <=> self.l_184
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/ReLU[relu] <=> self.l_185
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv] <=> self.l_186
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm] <=> self.l_187
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/ReLU[relu] <=> self.l_188
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv] <=> self.l_189
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm] <=> self.l_190
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_191
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_192
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_193
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/ReLU[relu] <=> self.l_194
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/Conv2d[conv] <=> self.l_195
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_196
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2] <=> self.l_197
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_198
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_199
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[4]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_200
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[5] <=> self.l_201
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_202
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_203
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_204
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_205
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_206
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_207
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_208
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_209
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_210
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_211
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_212
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_213
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[8] <=> self.l_214
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/ReLU[relu] <=> self.l_215
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/Conv2d[conv] <=> self.l_216
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[9]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_217
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/ReLU[relu] <=> self.l_218
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/Conv2d[conv] <=> self.l_219
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv1_1x1]/BatchNorm2d[norm] <=> self.l_220
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/ReLU[relu] <=> self.l_221
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/Conv2d[conv] <=> self.l_222
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv2_1x7]/BatchNorm2d[norm] <=> self.l_223
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/ReLU[relu] <=> self.l_224
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/Conv2d[conv] <=> self.l_225
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm] <=> self.l_226
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] <=> self.l_227
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/Conv2d[conv] <=> self.l_228
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/BatchNorm2d[norm] <=> self.l_229
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[11] <=> self.l_230
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/AvgPool2d[pool] <=> self.l_231
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/Conv2d[conv] <=> self.l_232
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[12]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm] <=> self.l_233
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/ReLU[relu] <=> self.l_234
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/Conv2d[conv] <=> self.l_235
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[13]/Conv_Cell[module]/BatchNorm2d[norm] <=> self.l_236
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[14] <=> self.l_237
        # AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling] <=> self.l_238
        # AmoebaNet_D/Classifier[classifier]/Linear[classifier] <=> self.l_239
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/ReLU[relu] <=> x0
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv] <=> x1
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/FactorizedReduce[preprocess0]/BatchNorm2d[bn] <=> x2
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/MergeTwo[14] <=> x3

        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_0 = self.l_1(self.l_0(x0))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_1 = self.l_2(x1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[1]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        t_2 = self.l_9(self.l_5(self.l_4(self.l_3(t_1))), self.l_8(self.l_7(self.l_6(t_1))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[5] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[3]/Conv_3x3[module]/Conv_Cell[conv3_1x1]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/MergeTwo[2]
        t_3 = self.l_19(self.l_18(self.l_17(self.l_16(self.l_15(self.l_14(self.l_13(self.l_12(self.l_11(self.l_10(t_0))))))))), t_2)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/Sequential[layers]/InputOne[6]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_4 = self.l_29(self.l_28(self.l_27(self.l_26(self.l_25(self.l_24(self.l_23(self.l_22(self.l_21(self.l_20(t_2))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/prim::ListConstruct10656
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[11]/prim::Constant10657
        t_5 = torch.cat(tensors=[self.l_35(self.l_31(self.l_30(t_4)), self.l_34(self.l_33(self.l_32(t_2)))), self.l_42(self.l_38(self.l_37(self.l_36(t_2))), self.l_41(self.l_40(self.l_39(t_3)))), self.l_46(t_3, self.l_45(self.l_44(self.l_43(t_0))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_6 = self.l_49(self.l_48(self.l_47(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_7 = self.l_59(self.l_58(self.l_57(self.l_56(self.l_55(self.l_54(self.l_53(self.l_52(self.l_51(self.l_50(t_6))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_8 = self.l_75(self.l_74(self.l_73(self.l_72(self.l_71(self.l_70(self.l_69(self.l_68(self.l_67(self.l_66(t_6))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/prim::ListConstruct11451
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[12]/prim::Constant11452
        t_9 = torch.cat(tensors=[self.l_62(x2, self.l_61(self.l_60(t_7))), self.l_78(self.l_65(self.l_64(self.l_63(t_6))), self.l_77(self.l_76(t_8))), x3], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_10 = self.l_81(self.l_80(self.l_79(t_5)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_11 = self.l_84(self.l_83(self.l_82(t_9)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_12 = self.l_91(self.l_87(self.l_86(self.l_85(t_10))), self.l_90(self.l_89(self.l_88(t_10))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_13 = self.l_105(self.l_104(self.l_103(self.l_102(self.l_101(self.l_100(self.l_99(self.l_98(self.l_97(self.l_96(t_11))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_14 = self.l_121(self.l_120(self.l_119(self.l_118(self.l_117(self.l_116(self.l_115(self.l_114(self.l_113(self.l_112(t_11))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/prim::ListConstruct12204
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[13]/prim::Constant12205
        t_15 = torch.cat(tensors=[self.l_108(t_10, self.l_107(self.l_106(t_13))), self.l_124(self.l_111(self.l_110(self.l_109(t_11))), self.l_123(self.l_122(t_14))), self.l_131(self.l_127(self.l_126(self.l_125(t_10))), self.l_130(self.l_129(self.l_128(self.l_95(t_12, self.l_94(self.l_93(self.l_92(t_12))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_16 = self.l_134(self.l_133(self.l_132(t_9)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_17 = self.l_137(self.l_136(self.l_135(t_15)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_18 = self.l_144(self.l_140(self.l_139(self.l_138(t_16))), self.l_143(self.l_142(self.l_141(t_16))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_19 = self.l_158(self.l_157(self.l_156(self.l_155(self.l_154(self.l_153(self.l_152(self.l_151(self.l_150(self.l_149(t_17))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_20 = self.l_174(self.l_173(self.l_172(self.l_171(self.l_170(self.l_169(self.l_168(self.l_167(self.l_166(self.l_165(t_17))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/prim::ListConstruct12957
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[14]/prim::Constant12958
        t_21 = torch.cat(tensors=[self.l_161(t_16, self.l_160(self.l_159(t_19))), self.l_177(self.l_164(self.l_163(self.l_162(t_17))), self.l_176(self.l_175(t_20))), self.l_184(self.l_180(self.l_179(self.l_178(t_16))), self.l_183(self.l_182(self.l_181(self.l_148(t_18, self.l_147(self.l_146(self.l_145(t_18))))))))], dim=1)
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess0]/Conv2d[conv]
        t_22 = self.l_187(self.l_186(self.l_185(t_15)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/BatchNorm2d[norm] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Conv_Cell[preprocess1]/Conv2d[conv]
        t_23 = self.l_190(self.l_189(self.l_188(t_21)))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/MergeTwo[2] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[0]/Pool_Operation[module]/Conv_Cell[conv_cell]/BatchNorm2d[norm]
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[1]/Conv_Cell[module]/BatchNorm2d[norm]
        t_24 = self.l_197(self.l_193(self.l_192(self.l_191(t_22))), self.l_196(self.l_195(self.l_194(t_22))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[7]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_25 = self.l_211(self.l_210(self.l_209(self.l_208(self.l_207(self.l_206(self.l_205(self.l_204(self.l_203(self.l_202(t_23))))))))))
        # calling AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv4_1x1]/ReLU[relu] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/Sequential[layers]/InputOne[10]/Conv_7x1_1x7[module]/Conv_Cell[conv3_7x1]/BatchNorm2d[norm]
        t_26 = self.l_227(self.l_226(self.l_225(self.l_224(self.l_223(self.l_222(self.l_221(self.l_220(self.l_219(self.l_218(t_23))))))))))
        # calling torch.cat with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/prim::ListConstruct13710
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/prim::Constant13711
        t_27 = torch.cat(tensors=[self.l_214(t_22, self.l_213(self.l_212(t_25))), self.l_230(self.l_217(self.l_216(self.l_215(t_23))), self.l_229(self.l_228(t_26))), self.l_237(self.l_233(self.l_232(self.l_231(t_22))), self.l_236(self.l_235(self.l_234(self.l_201(t_24, self.l_200(self.l_199(self.l_198(t_24))))))))], dim=1)
        # calling AmoebaNet_D/Classifier[classifier]/AvgPool2d[global_pooling] with arguments:
        # AmoebaNet_D/Sequential[cells]/Amoeba_Cell[15]/aten::cat13712
        t_28 = self.l_238(t_27)
        # returing:
        # AmoebaNet_D/Classifier[classifier]/Linear[classifier]
        return (self.l_239(Tensor.view(t_28, size=[Tensor.size(t_28, dim=0), -1])),)

    def state_dict(self,device):
        # we return the state dict of this part as it should be in the original model
        state = super().state_dict()
        lookup = self.lookup
        result = dict()
        for k, v in state.items():
            if k in lookup:
                result[lookup[k]] = v if device is None else v.to(device)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                result[new_k] = v if device is None else v.to(device)
        return result

    def load_state_dict(self, state):
        reverse_lookup = {v: k for k, v in self.lookup.items()}
        ts = chain(self.named_parameters(), self.named_buffers())
        device = list(ts)[0][1].device
        keys = list(self.state_dict(None).keys())
        new_state = dict()
        for k in keys:
            if k in reverse_lookup:
                new_state[reverse_lookup[k]] = state[k].to(device)
                continue
            idx = k.rfind(".")
            to_replace = k[:idx]
            if to_replace in reverse_lookup:
                key = reverse_lookup[to_replace] + k[idx:]
                new_state[key] = state[k].to(device)
        super().load_state_dict(new_state, strict=True)

    def named_parameters(self,recurse=True):
        # we return the named parameters of this part as it should be in the original model
        params = super().named_parameters(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)

    def named_buffers(self,recurse=True):
        # we return the named buffers of this part as it should be in the original model
        params = super().named_buffers(recurse=recurse)
        lookup = self.lookup
        for k, v in params:
            if k in lookup:
                yield (lookup[k],v)
            else:
                assert '.' in k
                split_idx = k.find('.')
                new_k = lookup[k[:split_idx]] + k[split_idx:]
                yield (new_k, v)


def traverse_model(module: nn.Module, depth: int, prefix: Optional[str] = None, basic_blocks: Optional[Iterable[nn.Module]] = None, full: bool = False) -> Iterator[Tuple[nn.Module, str, nn.Module]]:
    '''
    iterate over model layers yielding the layer,layer_scope,encasing_module
    Parameters:
    -----------
    model:
        the model to iterate over
    depth:
        how far down in the model tree to go
    basic_blocks:
        a list of modules that if encountered will not be broken down
    full:
        whether to yield only layers specified by the depth and basick_block options or to yield all layers
    '''
    if prefix is None:
        prefix = type(module).__name__

    for name, sub_module in module.named_children():
        scope = prefix + "/" + type(sub_module).__name__ + f"[{name}]"
        if len(list(sub_module.children())) == 0 or (basic_blocks != None and isinstance(sub_module, tuple(basic_blocks))) or depth == 0:
            yield sub_module, scope, module
        else:
            if full:
                yield sub_module, scope, module
            yield from traverse_model(sub_module, depth - 1, prefix + "/" + type(
                sub_module).__name__ + f"[{name}]", basic_blocks, full)


def layerDict(model: nn.Module):
    return {s: l for l, s, _ in traverse_model(model, 1000)}


def traverse_params_buffs(module: nn.Module, prefix: Optional[str] = None) -> Iterator[Tuple[torch.tensor, str]]:
    '''
    iterate over model's buffers and parameters yielding obj,obj_scope

    Parameters:
    -----------
    model:
        the model to iterate over
    '''
    if prefix is None:
        prefix = type(module).__name__

    # params
    for param_name, param in module.named_parameters(recurse=False):
        param_scope = f"{prefix}/{type(param).__name__}[{param_name}]"
        yield param, param_scope

    # buffs
    for buffer_name, buffer in module.named_buffers(recurse=False):
        buffer_scope = f"{prefix}/{type(buffer).__name__}[{buffer_name}]"
        yield buffer, buffer_scope

    # recurse
    for name, sub_module in module.named_children():
        yield from traverse_params_buffs(sub_module, prefix + "/" + type(sub_module).__name__ + f"[{name}]")


def tensorDict(model: nn.Module):
    return {s: t for t, s in traverse_params_buffs(model)}
